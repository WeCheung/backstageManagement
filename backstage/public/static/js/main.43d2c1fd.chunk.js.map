{"version":3,"sources":["reducers/index.js","reducers/page.js","storeConfig/index.js","utils/storage.js","pages/login/index.jsx","pages/index/option1.js","pages/index/option2.js","pages/index/index.jsx","api/index.js","pages/shop/classification/addCategory.jsx","components/my_button/index.jsx","pages/shop/classification/modify.jsx","pages/shop/classification/index.jsx","utils/constants.js","pages/shop/manage/item_manager.jsx","actions/changePage.js","pages/shop/manage/pictures_wall.jsx","pages/shop/manage/editor.jsx","pages/shop/manage/addItem.jsx","pages/shop/manage/details.jsx","pages/shop/manage/index.jsx","pages/user/addInfo.jsx","pages/user/index.jsx","pages/character/add_character.jsx","pages/character/set_authority.jsx","pages/character/index.jsx","config/sider.js","pages/chart/line/index.jsx","pages/chart/bar/index.jsx","pages/chart/pie/index.jsx","components/my_header/index.jsx","pages/admin/index.jsx","App.js","index.js"],"names":["Reducers","combineReducers","Page","state","currentPage","action","page","data","type","devToolsExtension","window","undefined","getUser","JSON","parse","localStorage","getItem","removeUser","removeItem","Login","handleSubmit","e","preventDefault","props","form","validateFields","err","values","axios","post","then","res","userInfo","status","msg","message","success","setItem","stringify","username","timer","setTimeout","history","push","error","catch","console","log","clearTimeout","this","getFieldDecorator","className","onSubmit","Item","rules","required","min","max","prefix","style","color","placeholder","htmlType","block","Component","create","option1","backgroundColor","echarts","graphic","LinearGradient","offset","title","text","left","bottom","textStyle","fontSize","grid","top","right","containLabel","xAxis","boundaryGap","axisLabel","margin","axisLine","show","axisTick","length","lineStyle","splitLine","yAxis","position","width","series","name","smooth","showAllSymbol","symbol","symbolSize","normal","label","itemStyle","borderColor","borderWidth","tooltip","areaStyle","option2","radius","center","backgroundStyle","formatter","toFixed","img","letters","Index","myChart_1","init","document","getElementById","setOption","resize","myChart_2","id","span","hoverable","theme","float","marginTop","padding","itemLayout","dataSource","size","renderItem","item","Meta","avatar","src","description","postCategory","info","a","category","categoryName","classId","result","modifyCategory","oldName","newName","deleteCategory","deleteItem","getClassOne","get","getCategories","deleteImg","goodsInfo","updateInfo","indexInfo","params","deleteGoods","addRoles","getRoles","setRoleAuthority","addUser","getUsers","getSingleUser","updateUser","deleteUser","getUserAuthority","judgeAuthority","pathname","authority","includes","Option","AddCategory","levelOne","getForm","nextProps","nextState","nextContext","setState","dataToRender","initialValue","value","map","index","key","PureComponent","MyButton","ghost","Modify","args","input","React","createRef","getInput","current","focus","ref","Classification","visible","setVisible","deleteVisible","subData","columns","dataIndex","render","record","subName","userSelect","children","onClick","handleShowDetails","handleModify","handleDelete","loading","showSub","isLoading","handleJudgeIfHasAuthority","location","goBack","dataObj","_id","GetTableData","handleAdd","classOne","handleDeleteOk","handleOk","operationType","resetFields","handleCancel","handleBackToSquareOne","extra","fontsize","cursor","marginLeft","pagination","defaultPageSize","onOk","onCancel","okText","cancelText","theInput","PAGE_SIZE","ItemManager","dataArr","total","keywords","method","handleRenderItems","handleChangeMethod","handleChangeKeywords","target","handleAddItem","num","keyword","searchMethod","layout","setFieldsValue","onChange","rowKey","bordered","changePage","mapDispatchToProps","connect","PicturesWall","previewVisible","previewImage","fileList","handleRenderPreImgs","imgs","uid","url","handlePreview","file","preview","handleChange","response","getImagesInfo","uploadButton","listType","accept","onPreview","footer","alt","EditorConvertToHTML","onEditorStateChange","editorState","getEditorContent","draftToHtml","convertToRaw","getCurrentContent","html","details","Boolean","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","createEmpty","wrapperClassName","editorClassName","editorStyle","border","height","TextArea","AddItem","loadClassOne","backToManage","loadData","selectedOptions","targetOption","optionsChildren","isLeaf","options","handleJudge","renderObj","classification","price","optionIndex","findIndex","editor","labelCol","sm","wrapperCol","autoSize","addonAfter","changeOnSelect","withRouter","Details","handleGoBack","dangerouslySetInnerHTML","__html","Manage","path","exact","component","AddInfo","roles","handleGetRoles","allRoles","xs","phone","role","reduce","pre","next","confirm","User","Date","toLocaleString","showDeleteConfirm","showModal","selectedUser","modify","users","user","okType","icon","wrappedComponentRef","AddCharacter","TreeNode","SetAuthority","menu","onCheck","checkedKeys","handleRenderTreeData","route","menuConfig","disabled","checkable","selectable","defaultExpandAll","Character","selectedRowKeys","roleName","create_time","showAuthority","handleAuthorityOk","setAuthority","auth_time","auth_name","Promise","all","userRole","rowSelection","selectedRows","onRow","event","books","sales","getOption1","legend","trigger","getOption2","update","option","orient","getOption3","roseType","sort","b","MyHeader","currentTime","dayPictureUrl","weather","temperature","wind","handleExit","handleGetCurrentTime","setInterval","handleGetTitle","arr","some","flag","RegExp","test","clearInterval","Content","Footer","Sider","SubMenu","Admin","selectedKey","openKeys","admin","handleGetSelectedKey","handleFindOpenSubMenu","cItem","handleRenderMenu","hasAuthority","handleJudgeAuthority","to","handleRenderRoute","handleGetAuthority","breakpoint","collapsedWidth","mode","defaultSelectedKeys","defaultOpenKeys","overflowY","background","minHeight","textAlign","App","compose","applyMiddleware","thunk","store","createStore","ReactDOM"],"mappings":"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","file":"static/js/main.43d2c1fd.chunk.js","sourcesContent":["import {combineReducers} from \"redux\";\r\nimport Page from './page'\r\n\r\nconst Reducers = combineReducers({\r\n    Page\r\n})\r\n\r\nexport default Reducers","\r\n\r\nexport default function (state = {currentPage: 1}, action) {\r\n    // console.log(action);\r\n    const page = action.data\r\n    switch (action.type) {\r\n        case 'CHANGE_PAGE':\r\n            return {currentPage: page}\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    createStore\r\n} from \"redux\";\r\n\r\nimport Reducers from '../reducers'\r\n\r\nconst devToolsExtension = window.devToolsExtension?window.devToolsExtension():undefined\r\n\r\nexport default function (init) {\r\n    const store = createStore(\r\n        Reducers\r\n        ,init\r\n        ,devToolsExtension\r\n    )\r\n    return store\r\n}","export function saveUser(userInfo) {\r\n    localStorage.setItem('user', JSON.stringify({username: userInfo.username}))\r\n}\r\n\r\nexport function getUser() {\r\n    return JSON.parse(localStorage.getItem('user') || '{}')\r\n}\r\n\r\nexport function removeUser() {\r\n    localStorage.removeItem('user')\r\n}","import React, {Component} from 'react';\r\nimport axios from 'axios'\r\nimport { Form, Icon, Input, Button, message } from 'antd'\r\nimport {saveUser} from '../../utils/storage'\r\nimport './index.scss'\r\n\r\nclass Login extends Component {\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            axios.post(\"/login\", values)\r\n                .then(res=>{\r\n                    // console.log(res);\r\n                    const {status, msg} = res.data\r\n                    if( status === 0 ){ // 验证成功\r\n                        message.success(msg)\r\n                        saveUser(values)\r\n                        this.timer = setTimeout(()=>{\r\n                            this.props.history.push('/admin')\r\n                        }, 1000)\r\n                    } else{\r\n                        message.error(msg)\r\n                    }\r\n                })\r\n                .catch(err=>{\r\n                    console.log(err);\r\n                })\r\n        });\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer)\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form\r\n        return (\r\n            <div className={'login'}>\r\n                <h2>React 后台管理系统</h2>\r\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                    {/*账号*/}\r\n                    <Form.Item>\r\n                        {getFieldDecorator('username', {\r\n                            rules: [\r\n                                {\r\n                                    required: true\r\n                                    , message: '用户名不能为空'\r\n                                }\r\n                                ,{\r\n                                    min: 5\r\n                                    , message: '用户名长度不能少于5位'\r\n                                }\r\n                                ,{\r\n                                    max: 16\r\n                                    , message: '用户名长度不能多于16位'\r\n                                }\r\n                            ],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                placeholder=\"Username\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    {/*密码*/}\r\n                    <Form.Item>\r\n                        {getFieldDecorator('password', {\r\n                            rules: [\r\n                                {\r\n                                    required: true\r\n                                    , message: '密码不能为空'\r\n                                }\r\n                                ,{\r\n                                    min: 6\r\n                                    , message: '密码长度不能少于6位'\r\n                                }\r\n                                ,{\r\n                                    max: 12\r\n                                    , message: '密码长度不能多于12位'\r\n                                }\r\n                            ],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    {/*登录按钮*/}\r\n                    <Form.Item>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            block\r\n                            className=\"login-form-button\"\r\n                        >\r\n                            登录\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(Login);","import echarts from 'echarts/lib/echarts'\r\nimport 'echarts/lib/chart/line'\r\n\r\nconst option1 = {\r\n    backgroundColor: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n        offset: 0,\r\n        color: '#c86589'\r\n    },\r\n        {\r\n            offset: 1,\r\n            color: '#06a7ff'\r\n        }\r\n    ], false),\r\n    title: {\r\n        text: \"访问量\",\r\n        left: \"center\",\r\n        bottom: \"0\",\r\n        textStyle: {\r\n            color: \"#fff\",\r\n            fontSize: 16\r\n        }\r\n    },\r\n    grid: {\r\n        top: '25%',\r\n        left: '5%',\r\n        right: '20%',\r\n        bottom: '15%',\r\n        containLabel: true,\r\n    },\r\n    xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false,\r\n        data: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\r\n        axisLabel: {\r\n            margin: 30,\r\n            color: '#ffffff63'\r\n        },\r\n        axisLine: {\r\n            show: false\r\n        },\r\n        axisTick: {\r\n            show: true,\r\n            length: 25,\r\n            lineStyle: {\r\n                color: \"#ffffff1f\"\r\n            }\r\n        },\r\n        splitLine: {\r\n            show: true,\r\n            lineStyle: {\r\n                color: '#ffffff1f'\r\n            }\r\n        }\r\n    },\r\n    yAxis: [{\r\n        type: 'value',\r\n        position: 'right',\r\n        axisLabel: {\r\n            margin: 20,\r\n            color: '#ffffff63'\r\n        },\r\n\r\n        axisTick: {\r\n            show: true,\r\n            length: 15,\r\n            lineStyle: {\r\n                color: \"#ffffff1f\",\r\n            }\r\n        },\r\n        splitLine: {\r\n            show: true,\r\n            lineStyle: {\r\n                color: '#ffffff1f'\r\n            }\r\n        },\r\n        axisLine: {\r\n            lineStyle: {\r\n                color: '#fff',\r\n                width: 2\r\n            }\r\n        }\r\n    }],\r\n    series: [{\r\n        name: '访问量',\r\n        type: 'line',\r\n        smooth: true, //是否平滑曲线显示\r\n        showAllSymbol: true,\r\n        symbol: 'circle',\r\n        symbolSize: 6,\r\n        lineStyle: {\r\n            normal: {\r\n                color: \"#fff\", // 线条颜色\r\n            },\r\n        },\r\n        label: {\r\n            show: true,\r\n            position: 'top',\r\n            textStyle: {\r\n                color: '#fff',\r\n            }\r\n        },\r\n        itemStyle: {\r\n            color: \"red\",\r\n            borderColor: \"#fff\",\r\n            borderWidth: 3\r\n        },\r\n        tooltip: {\r\n            show: false\r\n        },\r\n        areaStyle: {\r\n            normal: {\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                    offset: 0,\r\n                    color: '#eb64fb'\r\n                },\r\n                    {\r\n                        offset: 1,\r\n                        color: '#3fbbff0d'\r\n                    }\r\n                ], false),\r\n            }\r\n        },\r\n        data: [393, 438, 485, 631, 689, 824, 987, 1000, 1100, 1200]\r\n    }]\r\n    // ,dataZoom:0.8\r\n}\r\n\r\nexport default option1\r\n","// import echarts from 'echarts'\r\n\r\nlet value = 0.9;\r\nlet data = [value, value, value, value, value, ]\r\n\r\nconst option2 = {\r\n    backgroundColor: '#fff',\r\n\r\n    graphic: [{\r\n        type: 'group',\r\n        left: 'center',\r\n        bottom: 10,\r\n        // children: [{\r\n        //     type: 'text',\r\n        //     z: 100,\r\n        //     left: '10',\r\n        //     top: 'middle',\r\n        //     style: {\r\n        //         fill: '#000',\r\n        //         // text: '磁盘剩余空间：',\r\n        //         // font: '16px Microsoft YaHei'\r\n        //     }\r\n        // }, {\r\n        //     type: 'text',\r\n        //     z: 100,\r\n        //     left: '120',\r\n        //     top: 'middle',\r\n        //     style: {\r\n        //         fill: '#000',\r\n        //         // text: '128G',\r\n        //         font: '24px Microsoft YaHei'\r\n        //     }\r\n        // }]\r\n    }],\r\n    series: [{\r\n        type: 'liquidFill',\r\n        radius: '70%',\r\n        center: ['40%', '40%'],\r\n        data: data,\r\n        backgroundStyle: {\r\n            borderWidth: 5,\r\n            borderColor: '#1daaeb',\r\n            color: '#fff'\r\n        },\r\n        label: {\r\n            normal: {\r\n                formatter: (value * 100).toFixed(2) + '%',\r\n                textStyle: {\r\n                    fontSize: 20\r\n                }\r\n            }\r\n        }\r\n    }]\r\n}\r\n\r\nexport default option2\r\n","import React, {Component} from 'react';\r\nimport { Row, Col, Card, Icon, Timeline, List, Avatar } from 'antd'\r\nimport echarts from 'echarts/lib/echarts'\r\nimport 'echarts/lib/chart/line'\r\nimport 'echarts/lib/chart/bar'\r\nimport 'echarts/lib/chart/sunburst'\r\nimport 'echarts-liquidfill'\r\nimport './index.scss'\r\n\r\nimport option1 from \"./option1\";\r\nimport option2 from \"./option2\";\r\n\r\nconst data = [\r\n    {\r\n        title: '鸣人',\r\n        // http://localhost:5000/avatar/1.jpg\r\n        img:'/avatar/1.jpg',\r\n        letters:'终于当上火影了！'\r\n    },\r\n    {\r\n        title: '佐助',\r\n        // http://localhost:5000/avatar/2.jpg\r\n        img:'/avatar/2.jpg',\r\n        letters:'吊车尾~~'\r\n    },\r\n    {\r\n        title: '小樱',\r\n        // http://localhost:5000/avatar/3.jpg\r\n        img:'/avatar/3.jpg',\r\n        letters:'佐助，你好帅！'\r\n    },\r\n    {\r\n        title: '雏田',\r\n        // http://localhost:5000/avatar/4.jpg\r\n        img:'/avatar/4.jpg',\r\n        letters:'鸣人君。。。那个。。。我。。喜欢你.'\r\n    },\r\n]\r\n\r\nclass Index extends Component {\r\n    componentDidMount() {\r\n        let myChart_1 = echarts.init(document.getElementById('echarts_box1'))\r\n        myChart_1.setOption(option1)\r\n        myChart_1.resize(836, 201)\r\n\r\n        let myChart_2 = echarts.init(document.getElementById('echarts_box2'))\r\n        myChart_2.setOption(option2)\r\n        myChart_2.resize()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={'home'}>\r\n                <Row>\r\n                    <Col span={4}>\r\n                        <div className=\"cloud_box\">\r\n                            <Card hoverable={true}>\r\n                                <Icon\r\n                                    type=\"heart\"\r\n                                    theme=\"filled\"\r\n                                    style={{float:'left',fontSize:'30px',color:'red'}}\r\n                                />\r\n                                <div className=\"CB_content\">\r\n                                    <p className=\"title\">收藏</p>\r\n                                    <p className=\"data\">396</p>\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n\r\n                        <div className=\"cloud_box\" style={{marginTop:'10px'}}>\r\n                            <Card hoverable={true}>\r\n                                <Icon\r\n                                    type=\"cloud\"\r\n                                    theme=\"filled\"\r\n                                    style={{float:'left',fontSize:'30px',color:'rgb(89,89,89)'}}\r\n                                />\r\n                                <div className=\"CB_content\">\r\n                                    <p className=\"title\">云数据</p>\r\n                                    <p className=\"data\">30122</p>\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={4}>\r\n                        <div className=\"cloud_box\">\r\n                            <Card hoverable={true}>\r\n                                <Icon\r\n                                    type=\"camera\"\r\n                                    theme=\"filled\"\r\n                                    style={{float:'left',fontSize:'30px',color:'rgb(104,135,255)'}}\r\n                                />\r\n                                <div className=\"CB_content\">\r\n                                    <p className=\"title\">照片</p>\r\n                                    <p className=\"data\">802</p>\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n\r\n                        <div className=\"cloud_box\" style={{marginTop:'10px'}}>\r\n                            <Card hoverable={true}>\r\n                                <Icon\r\n                                    type=\"mail\"\r\n                                    theme=\"filled\"\r\n                                    style={{float:'left',fontSize:'30px',color:'rgb(108,199,136)'}}\r\n                                />\r\n                                <div className=\"CB_content\">\r\n                                    <p className=\"title\">邮件</p>\r\n                                    <p className=\"data\">102</p>\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={16} style={{position:'relative'}}>\r\n                        <p className=\"box1_title\">过去十天访问量</p>\r\n                        <div id=\"echarts_box1\">\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{marginTop:'20px'}}>\r\n                    <Col span={8}>\r\n                        <Card style={{width:'98%'}} hoverable>\r\n                            <div className=\"secondLineTitleBox\">\r\n                                <p className=\"title\">\r\n                                    建站日志\r\n                                </p>\r\n                                <p className=\"intro\">\r\n                                    2个待完成，一个正在进行中\r\n                                </p>\r\n                            </div>\r\n                            <Timeline>\r\n                                <Timeline.Item color=\"blue\">更多模块开发中</Timeline.Item>\r\n                                <Timeline.Item color=\"red\">使用TS重构(正在开发)</Timeline.Item>\r\n                                <Timeline.Item color=\"green\">引入Redux,Fetch</Timeline.Item>\r\n                                <Timeline.Item color=\"green\">引入Less,React-Router(4.x)</Timeline.Item>\r\n                                <Timeline.Item color=\"green\" style={{padding:0}}>初始化项目</Timeline.Item>\r\n                            </Timeline>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Card style={{width:'98%'}} hoverable>\r\n                            <div className=\"secondLineTitleBox\">\r\n                                <p className=\"title\">\r\n                                    消息栏\r\n                                </p>\r\n                            </div>\r\n                            <List\r\n                                itemLayout=\"horizontal\"\r\n                                dataSource={data}\r\n                                size={\"small\"}\r\n                                renderItem={item => (\r\n                                    <List.Item>\r\n                                        <List.Item.Meta\r\n                                            avatar={<Avatar src={item.img} />}\r\n                                            title={<span>{item.title}</span>}\r\n                                            description={item.letters}\r\n                                        />\r\n                                    </List.Item>\r\n                                )}\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Card style={{width:'98%'}} hoverable>\r\n                            <div className=\"secondLineTitleBox\">\r\n                                <p className=\"title\">\r\n                                    王的能力指数\r\n                                </p>\r\n                            </div>\r\n                            <div id=\"echarts_box2\">\r\n\r\n                            </div>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index;\r\n","import jsonp from 'jsonp'\r\nimport axios from 'axios'\r\nimport {getUser} from \"../utils/storage\";\r\n\r\n// 用于获取天气\r\nexport const getWeather = (city)=>{\r\n    return new Promise(res=>{\r\n        const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=tCxkD4UO8P6yvebwxd5Hp2WGN8jlOTjD`\r\n        jsonp(\r\n            url\r\n            ,{}\r\n            , (err, data)=>{\r\n                // console.log(err, data);\r\n                if( data && data.status === 'success' ){\r\n                    res(data)\r\n                } else{\r\n                    res({\r\n                        status: 'failure'\r\n                    })\r\n                }\r\n            })\r\n    }).catch(e=>{throw e})\r\n}\r\n\r\n// 用于添加分类\r\nexport const postCategory = async info => {\r\n    const {category, categoryName} = info\r\n    const result = await axios.post('/classification/add', {\r\n        classId: category\r\n        , name: categoryName\r\n    })\r\n    return result.data\r\n}\r\n\r\n// 用于修改分类\r\nexport const modifyCategory = async info => {\r\n    // console.log(info);\r\n    const {categoryName} = info.values\r\n    const {oldName, classId} = info\r\n    const result = await axios.post('/classification/modify', {\r\n        newName: categoryName\r\n        , oldName\r\n        , classId\r\n    })\r\n    return result\r\n}\r\n\r\n// 用于删除分类\r\nexport const deleteCategory = async info => {\r\n    // console.log('api', info);\r\n    const {deleteItem, classId} = info\r\n    const result = await axios.post('/classification/delete', {\r\n        name: deleteItem\r\n        , classId\r\n    })\r\n    // console.log('api', result);\r\n    return result\r\n}\r\n\r\n// 用于获取一级分类\r\nexport const getClassOne = ()=>{\r\n    const result = axios.get('/admin/classification/getClassOne')\r\n    return result\r\n}\r\n\r\n// 用于获取二级分类\r\nexport const getCategories = info=>{\r\n    const result = axios.post('/admin/classification/getCategories', info)\r\n    return result\r\n}\r\n\r\n// 用于删除已上传的图片\r\nexport const deleteImg = info => {\r\n    const result = axios.post('/img/delete', info)\r\n    return result\r\n}\r\n\r\n// 用于上传添加商品信息\r\nexport const goodsInfo = info => {\r\n    const result = axios.post('/goods/add', info)\r\n    return result\r\n}\r\n\r\n// 用于更新已上传的商品信息\r\nexport const updateInfo = info => {\r\n    const result = axios.post('/goods/update', info)\r\n    return result\r\n}\r\n\r\n// 用于获取商品管理首页商品内容\r\nexport const indexInfo = async info =>{\r\n    // console.log('info', info);\r\n    const result = axios.get('/manager/indexInfo', {\r\n        params: {\r\n            info\r\n        }\r\n    })\r\n    return result\r\n}\r\n\r\n// 用于删除商品\r\nexport const deleteGoods = info=>{\r\n    const result = axios.post('/goods/delete', info)\r\n    return result\r\n}\r\n\r\n// 用于添加角色\r\nexport const addRoles = info=>{\r\n    const result = axios.post('/role/add', info)\r\n    return result\r\n}\r\n\r\n// 用于获取所有角色\r\nexport const getRoles = ()=>{\r\n    const result = axios.get('/role/get')\r\n    return result\r\n}\r\n\r\n// 用于设置角色权限\r\nexport const setRoleAuthority = info=>{\r\n    const result = axios.post('/role/authority', info)\r\n    return result\r\n}\r\n\r\n// 用于添加用户\r\nexport const addUser = info=>{\r\n    const result = axios.post('/user/add', info)\r\n    return result\r\n}\r\n\r\n// 用于获取所有用户\r\nexport const getUsers = ()=>{\r\n    const result = axios.get('/user/get')\r\n    return result\r\n}\r\n\r\n// 用于获取单个用户\r\nexport const getSingleUser = username=>{\r\n    const result = axios.get('/user/single', {\r\n        params:{\r\n            username\r\n        }\r\n    })\r\n    return result\r\n}\r\n\r\n// 用于更新用户\r\nexport const updateUser = info =>{\r\n    const result = axios.post('/user/update', info)\r\n    return result\r\n}\r\n\r\n// 用于删除用户\r\nexport const deleteUser = info =>{\r\n    const result = axios.post('/user/delete', info)\r\n    return result\r\n}\r\n\r\n// 用于获取用户权限\r\nexport const getUserAuthority = username=>{\r\n    const result = axios.get('/user/authority', {\r\n        params: {\r\n            username\r\n        }\r\n    })\r\n    return result\r\n}\r\n\r\n// 用于判断当前用户是否有访问该页面的权限\r\nexport const judgeAuthority = (pathname, authority)=>{\r\n    const {username} = getUser()\r\n    // 要获得当前用户应有的权限和当前访问的路径\r\n    if( username === 'admin' ){\r\n        return true\r\n    } else if(authority && authority.includes(pathname)){\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\n","import React, {PureComponent} from 'react';\r\nimport {\r\n    Form\r\n    , Select\r\n    , Input\r\n} from \"antd\";\r\n\r\nconst { Option } = Select\r\n\r\nclass AddCategory extends PureComponent {\r\n    state = {\r\n        levelOne: []\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        // 将本组件的表单数据传到父组件中\r\n        this.props.getForm(this.props.form)\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        this.setState({\r\n            levelOne: this.props.dataToRender.data.result\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {getFieldDecorator} = this.props.form\r\n        // const {levelOne} = this.state\r\n        const levelOne = this.props.dataToRender.data.result\r\n        return (\r\n            <Form>\r\n                <Form.Item>\r\n                    {getFieldDecorator('category', {\r\n                        initialValue: '0'\r\n                    })(\r\n                        <Select>\r\n                            <Option value=\"0\">一级分类</Option>\r\n                            {/*在这里要渲染数据库中已有的一级分类数据*/}\r\n                            {\r\n                                levelOne.length > 0 && levelOne.map((item, index)=>{\r\n                                    return (\r\n                                        <Option key={index} value={item.name}>{item.name}</Option>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {\r\n                        getFieldDecorator('categoryName', {\r\n                            rules: [\r\n                                {\r\n                                    required: true\r\n                                    , message: '分类名称不能为空'\r\n                                }\r\n                            ]\r\n                        })(\r\n                            <Input placeholder={'请输入分类名称'}/>\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(AddCategory)","import React, {Component} from 'react';\r\nimport { Button } from 'antd'\r\n\r\nimport './index.scss'\r\nclass MyButton extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Button\r\n                {...this.props}\r\n                className={'my-button'}\r\n                style={this.props.style}\r\n                ghost\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyButton;","import React, {PureComponent} from 'react';\r\nimport {Form, Input} from \"antd\";\r\n\r\nclass Modify extends PureComponent {\r\n    constructor(args){\r\n        super(args)\r\n        this.state = {}\r\n        this.input = React.createRef()\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        //  将本表单的数据传到父组件中\r\n        this.props.getForm(this.props.form)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getInput(this.input)\r\n        this.input.current.input.focus()\r\n    }\r\n\r\n    render() {\r\n        const {getFieldDecorator} = this.props.form\r\n        return (\r\n            <Form>\r\n                <Form.Item>\r\n                    {\r\n                        getFieldDecorator('categoryName', {\r\n                            rules: [\r\n                                {\r\n                                    required: true\r\n                                    , message: '分类名称不能为空'\r\n                                }\r\n                                , {\r\n                                    min: 1\r\n                                    , message: '名称长度不能少于1位'\r\n                                }\r\n                                , {\r\n                                    max: 8\r\n                                    , message: '名称长度不能多于8位'\r\n                                }\r\n                            ]\r\n                        })(\r\n                            <Input\r\n                                placeholder={'请输入修改后的名称'}\r\n                                ref={this.input}\r\n                            />\r\n                        )\r\n                    }\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(Modify)","import React, {Component} from 'react';\r\nimport {\r\n    Card\r\n    , Button\r\n    , Icon\r\n    , Modal\r\n    , message\r\n    , Table\r\n    , Divider\r\n} from \"antd\";\r\nimport {\r\n    postCategory\r\n    , getClassOne\r\n    , modifyCategory\r\n    , deleteCategory\r\n    , getCategories\r\n    , judgeAuthority\r\n    , getUserAuthority\r\n} from \"../../../api\";\r\nimport AddCategory from \"./addCategory\";\r\nimport './index.scss'\r\nimport MyButton from \"../../../components/my_button\";\r\nimport Modify from \"./modify\";\r\nimport {getUser} from \"../../../utils/storage\";\r\n\r\nclass Classification extends Component {\r\n    state = {\r\n        visible: false              // 添加分类弹窗\r\n        , setVisible: false         // 设置分类弹窗\r\n        , deleteVisible: false      // 删除分类弹窗\r\n        , data: []                  // 渲染一级分类的数据\r\n        , subData: []               // 渲染二级分类的数据\r\n        , columns: [\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                render: (text, record) =>{\r\n                    return this.subName?(\r\n                        <span style={{userSelect: 'none'}}>{text}</span>\r\n                    ):(\r\n                        <MyButton\r\n                            children={text}\r\n                            onClick={()=>(this.handleShowDetails(record))}\r\n                        />\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                title: 'Action',\r\n                key: 'action',\r\n                width: 300,\r\n                render: (text, record) => (\r\n                    <span>\r\n                        {\r\n                            // 组件接受到的children属性的内容会渲染到组件展示的内容中\r\n                            // 相当于 <MyButton>{children的值}</MyButton>\r\n                        }\r\n                        <MyButton children={'Set'} onClick={()=>(this.handleModify(record))}/>\r\n                        <Divider type=\"vertical\" />\r\n                        <MyButton children={'Delete'} onClick={()=>(this.handleDelete(record))}/>\r\n                    </span>\r\n                ),\r\n            },\r\n        ]            // 要展示的内容\r\n        , loading: true             // 判定当前数据是否请求并渲染完毕\r\n        , showSub: false            // 判定展示一级分类还是二级分类页面的标志\r\n        , isLoading: true           // 判定当前页面是否已经渲染完成\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.GetTableData()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleJudgeIfHasAuthority()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer)\r\n    }\r\n\r\n    handleJudgeIfHasAuthority = async ()=>{\r\n        const {username} = getUser()\r\n        const result = await getUserAuthority(username)\r\n        const {authority} = result.data\r\n        const hasAuthority = judgeAuthority(this.props.history.location.pathname, authority)\r\n        if( hasAuthority ){\r\n            this.setState({\r\n                loading: false\r\n                , isLoading: false\r\n            })\r\n        } else{\r\n            message.error('没有权限，给爷爬！')\r\n            this.props.history.goBack()\r\n        }\r\n    }\r\n\r\n    handleShowDetails = async (record)=>{\r\n        // console.log(record);\r\n        this.subName = record.name\r\n        const dataObj = await getCategories(record)\r\n        // console.log('index', dataObj);\r\n        let {result} = dataObj.data\r\n        // console.log('result', result);\r\n        // 对得到的有用数据做一下格式上的修改\r\n        result = result.map(item=>{\r\n            return {\r\n                key: item._id\r\n                , name: item.name\r\n                , classId: item.classId\r\n            }\r\n        })\r\n        this.setState({\r\n            subData: result\r\n            , showSub: true\r\n        })\r\n    }\r\n\r\n    GetTableData = async ()=>{\r\n        let data = await getClassOne()\r\n        data = data.data.result\r\n        data = data.map(item=>{\r\n            return {\r\n                key: item._id\r\n                , name: item.name\r\n                , classId: item.classId\r\n            }\r\n        })\r\n        this.setState({\r\n            data\r\n        })\r\n    }\r\n\r\n    handleAdd = async ()=>{\r\n        this.classOne = await getClassOne()\r\n        this.setState({\r\n            visible: true\r\n        })\r\n    }\r\n\r\n    handleModify = (record)=>{\r\n        // console.log('record', record);\r\n        this.classId = record.classId\r\n        this.oldName = record.name\r\n        this.setState({\r\n            setVisible: true\r\n        })\r\n        // 为了使弹窗在二次渲染之后能获取焦点\r\n        this.timer = setTimeout(()=>{\r\n            this.input.focus()\r\n        }, 100)\r\n    }\r\n\r\n    handleDelete = (record)=>{\r\n        // console.log(record);\r\n        this.classId = record.classId\r\n        this.deleteItem = record.name\r\n        this.setState({\r\n            deleteVisible: true\r\n        })\r\n    }\r\n\r\n    handleDeleteOk = async ()=>{\r\n        const result = await deleteCategory({\r\n            deleteItem: this.deleteItem\r\n            , classId: this.classId\r\n        })\r\n        // console.log(result);\r\n        const {status, msg} = result.data\r\n        if( status === 0 ){  // 删除成功\r\n            message.info(msg)\r\n            this.setState({\r\n                deleteVisible: false\r\n            })\r\n            if( this.subName ){ // 如果删除的是二级目标\r\n                this.handleShowDetails({\r\n                    name: this.subName\r\n                    , classId: '0'\r\n                })\r\n            } else{ // 如果删除的是一级目标\r\n                this.GetTableData()\r\n            }\r\n        } else{\r\n            message.info(msg)\r\n            this.GetTableData()\r\n        }\r\n    }\r\n\r\n    handleOk = (operationType) => {\r\n        // 用于添加分类\r\n        if( operationType === 'add' ){\r\n            this.form.validateFields(async (err, values) => {\r\n                // console.log(values);\r\n                // 确定当前操作页面是在一级目录还是二级目录下\r\n                this.subName ? this.classId = this.subName : this.classId = '0'\r\n                const data = await postCategory(values)\r\n\r\n                if( data.status === 0 ){\r\n                    message.info('添加成功！')\r\n                    this.form.resetFields()\r\n                    if( this.subName ){ // 如果是在二级分类中添加的数据，不管是不是添加本分类的数据都执行一遍渲染函数\r\n                        this.handleShowDetails({\r\n                            name: this.subName\r\n                            , classId: '0'\r\n                        })\r\n                        this.classId = null // 添加成功后重置classId的值\r\n                    } else{ // 如果是在一级分类中添加的数据则直接渲染一遍一级分类的数据\r\n                        this.GetTableData()\r\n                    }\r\n                    this.setState({\r\n                        visible: false,\r\n                    });\r\n                } else{\r\n                    message.info('分类名称重复~')\r\n                }\r\n            });\r\n        }\r\n        // 用于修改分类名称\r\n        else if( operationType === 'modify' ){\r\n            this.form.validateFields( async (err, values) => {\r\n                // console.log('values', values);\r\n                const result = await modifyCategory({\r\n                    values\r\n                    , oldName: this.oldName\r\n                    , classId: this.classId\r\n                })\r\n                // console.log('result', result);\r\n                const {data} = result\r\n                // console.log(data);\r\n                if( data.status === 0 ){    // 如果修改成功\r\n                    message.info(data.msg)\r\n                    if( this.subName ){    // 如果是在二级分类中修改的名称，则重新获取一遍该分类的子集数据并渲染\r\n                        this.handleShowDetails({\r\n                            name: this.subName\r\n                            , classId: '0'\r\n                        })\r\n                    } else{ // 如果修改的是一级分类则根据新数据重新渲染一遍一级分类\r\n                        this.GetTableData() // 更新一级数据\r\n                    }\r\n                    this.form.resetFields()\r\n                    this.setState({\r\n                        setVisible: false\r\n                    })\r\n                } else{\r\n                    message.info(data.msg)\r\n                    this.form.resetFields()\r\n                    this.input.focus()\r\n                    // console.log(this.input);\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    handleCancel = e => {\r\n        // 删除项没有相关的form，因此这里要判断一下\r\n        this.form && this.form.resetFields()\r\n        this.setState({\r\n            visible: false\r\n            , setVisible: false\r\n            , deleteVisible: false\r\n        });\r\n    };\r\n\r\n    handleBackToSquareOne = ()=>{\r\n        this.subName = null // 重置二级分类名称\r\n        this.setState({\r\n            showSub: false\r\n        }, ()=>{\r\n            this.GetTableData()\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            data\r\n            , columns\r\n            , loading\r\n            , setVisible\r\n            , deleteVisible\r\n            , showSub\r\n            , subData\r\n            // , isLoading\r\n        } = this.state\r\n\r\n        const extra = (\r\n            <Button type=\"primary\" onClick={this.handleAdd}>\r\n                <Icon type=\"plus\" />\r\n                <span>添加分类</span>\r\n            </Button>\r\n        )\r\n\r\n        return (\r\n            <Card\r\n                title={!showSub?'分类管理':(\r\n                    <div>\r\n                        <span\r\n                            style={{\r\n                                fontsize: '20px'\r\n                                , color: 'skyblue'\r\n                                , cursor: 'pointer'\r\n                                , userSelect: 'none'\r\n                            }}\r\n                            onClick={this.handleBackToSquareOne}\r\n                        >分类管理</span>\r\n                        <Icon\r\n                            type=\"arrow-right\"\r\n                            style={{marginLeft: '10px'}}\r\n                        />\r\n                        <span\r\n                            style={{userSelect: 'none', marginLeft: '10px'}}\r\n                        >{this.subName && this.subName}</span>\r\n                    </div>\r\n                )}\r\n                extra={extra}\r\n            >\r\n\r\n                <Table\r\n                    columns={columns}\r\n                    dataSource={!showSub?data:subData}\r\n                    pagination={{defaultPageSize: 4}}\r\n                    loading={loading}\r\n                />\r\n\r\n                <Modal\r\n                    title=\"添加分类\"\r\n                    visible={this.state.visible}\r\n                    onOk={()=>(this.handleOk('add'))}\r\n                    onCancel={this.handleCancel}\r\n                    okText={'确定'}\r\n                    cancelText={'取消'}\r\n                >\r\n                    {/*给 AddCategory 这个组件传一个用来获取其组件表单资料的函数*/}\r\n                    <AddCategory\r\n                        getForm={form => this.form = form}\r\n                        dataToRender={this.classOne}\r\n                    />\r\n                </Modal>\r\n\r\n                <Modal\r\n                    title={'修改分类名称'}\r\n                    visible={setVisible}\r\n                    onOk={()=>{this.handleOk('modify')}}\r\n                    onCancel={this.handleCancel}\r\n                    okText={'确认修改'}\r\n                    cancelText={'取消'}\r\n                >\r\n                    <Modify\r\n                        getForm={form => this.form = form}\r\n                        getInput={theInput => this.input = theInput.current.input}\r\n                    />\r\n                </Modal>\r\n\r\n                <Modal\r\n                    title={'删除分类'}\r\n                    visible={deleteVisible}\r\n                    onOk={this.handleDeleteOk}\r\n                    onCancel={this.handleCancel}\r\n                    okText={'确认删除'}\r\n                    cancelText={'取消'}\r\n                >\r\n                    <p>您确定要删除该分类吗？</p>\r\n                </Modal>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Classification;","export const PAGE_SIZE = 4","import React, {Component, Fragment} from 'react';\r\nimport {\r\n    Form\r\n    , Select\r\n    , Input\r\n    , Button\r\n    , Icon\r\n    , Table\r\n    , Divider\r\n    , message\r\n} from \"antd\";\r\nimport {indexInfo, getUserAuthority, judgeAuthority, deleteGoods} from \"../../../api\";\r\nimport {PAGE_SIZE} from \"../../../utils/constants\";\r\nimport MyButton from \"../../../components/my_button\";\r\nimport {connect} from 'react-redux'\r\nimport {changePage} from \"../../../actions/changePage\";\r\nimport {getUser} from \"../../../utils/storage\";\r\n\r\nconst {Option} = Select\r\n\r\nclass ItemManager extends Component {\r\n    state = {\r\n        columns: [\r\n            {\r\n                title: '商品名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                render: text => <span className={'cannotSelect'}>{text}</span>,\r\n            },\r\n            {\r\n                title: '商品描述',\r\n                dataIndex: 'description',\r\n                key: 'description',\r\n                render: text => (\r\n                    <span className={'cannotSelect'}>{text}</span>\r\n                )\r\n            },\r\n            {\r\n                title: '商品价格',\r\n                dataIndex: 'price',\r\n                key: 'price',\r\n                render: text => (\r\n                    <span className={'cannotSelect'}>{`￥${text}元`}</span>\r\n                )\r\n            },\r\n            {\r\n                title: 'Action',\r\n                key: 'action',\r\n                render: (text, record) => {\r\n                    // console.log(text);\r\n                    return (\r\n                        <span>\r\n                            <MyButton\r\n                                style={{color: 'rgb(130, 210, 255)'}}\r\n                                onClick={()=>this.props.history.push({\r\n                                    pathname: '/admin/manage/details'\r\n                                    , state: {\r\n                                        info: text\r\n                                        , page: this.state.page\r\n                                    }\r\n                                })}\r\n                            >详情</MyButton>\r\n                            <Divider type=\"vertical\" />\r\n                            <MyButton\r\n                                style={{color: 'rgb(130, 210, 255)'}}\r\n                                onClick={()=>this.props.history.push({\r\n                                    pathname: '/admin/manage/addItem'\r\n                                    , state: {\r\n                                        info: text\r\n                                        , page: this.state.page\r\n                                    }\r\n                                })}\r\n                            >修改</MyButton>\r\n                            <Divider type=\"vertical\" />\r\n                            <MyButton\r\n                                style={{color: 'rgb(130, 210, 255)'}}\r\n                                onClick={()=>{this.handleDelete(record)}}\r\n                            >删除</MyButton>\r\n                        </span>\r\n                    )\r\n\r\n               } ,\r\n            },\r\n        ]\r\n        , dataArr: []\r\n        , total: 0\r\n        , keywords: ''\r\n        , method: 'searchByName'\r\n        , loading: true\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        // console.log('manager组件首页', this.props);\r\n        // if( this.props.location.state.page ) {   // 如果是从修改商品页面返回的\r\n        //     console.log('从商品页返回了！');\r\n        //     this.setState({\r\n        //         page: this.props.location.state.page\r\n        //     })\r\n        // }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleJudgeIfHasAuthority()\r\n    }\r\n\r\n    handleJudgeIfHasAuthority = async ()=>{\r\n        const {username} = getUser()\r\n        const result = await getUserAuthority(username)\r\n        const {authority} = result.data\r\n        const hasAuthority = judgeAuthority(this.props.history.location.pathname, authority)\r\n        if( hasAuthority ){\r\n            this.handleRenderItems(this.props.state.Page.currentPage, PAGE_SIZE)\r\n        } else{\r\n            message.error('没有权限，给爷爬！')\r\n            this.props.history.goBack()\r\n        }\r\n    }\r\n\r\n    handleChangeMethod = (value)=>{\r\n        // console.log(`selected ${value}`);\r\n        this.setState({\r\n            method: value\r\n        })\r\n    }\r\n\r\n    handleChangeKeywords = e => {\r\n        this.setState({\r\n            keywords: e.target.value\r\n        })\r\n    }\r\n\r\n    handleAddItem = ()=>{\r\n        this.props.history.push('/admin/manage/addItem')\r\n    }\r\n\r\n    handleRenderItems = async (page, num, method, keyword)=>{\r\n        const result = await indexInfo({\r\n            page\r\n            , num\r\n            , [method]: keyword\r\n        })\r\n        // console.log('result', result);\r\n        const {data, status} = result\r\n        const {dataArr, total} = data\r\n        if( status === 200 ){\r\n            this.setState({\r\n                dataArr\r\n                , total\r\n                , loading: false\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                const {searchMethod, keyword} = values\r\n                this.handleRenderItems(1, PAGE_SIZE, searchMethod, keyword)\r\n            }\r\n        });\r\n    };\r\n\r\n    handleDelete = async (info)=>{\r\n        const result = await deleteGoods(info)\r\n        const {data:{status, msg}} = result\r\n        if( status === 0 ){\r\n            message.success(msg)\r\n            this.handleRenderItems(this.props.state.Page.currentPage, PAGE_SIZE)\r\n        } else{\r\n            message.error(msg)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {currentPage} = this.props.state.Page\r\n        // console.log('我是currentPage', currentPage, typeof currentPage);\r\n        const {getFieldDecorator} = this.props.form\r\n        const {columns, dataArr, total, method, keywords, loading} = this.state\r\n        return (\r\n            <Fragment>\r\n                {/*表单区*/}\r\n                <div className=\"formField clearfix\">\r\n                    <Form layout={'inline'} style={{float: 'left'}}>\r\n                        <Form.Item>\r\n                            {\r\n                                getFieldDecorator('searchMethod', {\r\n                                    initialValue: 'searchByName'\r\n                                    , rules:[\r\n\r\n                                    ]\r\n                                    , setFieldsValue: method\r\n                                })(\r\n                                    <Select\r\n                                        style={{ width: 200 }}\r\n                                        onChange={this.handleChangeMethod}\r\n                                    >\r\n                                        <Option title={\"searchByName\"} value=\"searchByName\">按名称搜索</Option>\r\n                                        <Option title={\"searchByDescription\"} value=\"searchByDescription\">按描述搜索</Option>\r\n                                    </Select>\r\n                                )\r\n                            }\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            {\r\n                                getFieldDecorator('keyword', {\r\n                                    rules: []\r\n                                    , setFieldsValue: keywords\r\n                                })(\r\n                                    <Input\r\n                                        placeholder={'搜索关键字'}\r\n                                        onChange={this.handleChangeKeywords}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type={'primary'} children={'搜索'} onClick={this.handleSubmit}/>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <Button type={'primary'} style={{float: 'right'}} onClick={this.handleAddItem}>\r\n                        <Icon type={'plus'} />\r\n                        <span>添加商品</span>\r\n                    </Button>\r\n                </div>\r\n\r\n                {/*内容展示区*/}\r\n                <div className=\"managerContent\">\r\n                    <Table\r\n                        columns={columns}\r\n                        dataSource={dataArr}\r\n                        rowKey={'_id'}\r\n                        bordered\r\n                        pagination={{\r\n                            total\r\n                            , defaultPageSize: PAGE_SIZE\r\n                            , current: currentPage\r\n                            , onChange: page => {\r\n                                // console.log(page, typeof page);\r\n                                this.props.changePage(page)\r\n                                this.handleRenderItems(page, PAGE_SIZE, method, keywords)\r\n                            }\r\n                        }}\r\n                        loading={loading}\r\n                    />\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n// 将 state 映射到 props 中，这样组件就可以通过 this.props 获得仓库中新的状态\r\nconst mapStateToProps = state => {\r\n    return { state }    // 相当于 store.getState()\r\n}\r\n// 将指令传到组件的 this.props 中\r\nconst mapDispatchToProps = {\r\n    changePage\r\n}\r\nItemManager = connect(mapStateToProps, mapDispatchToProps)(ItemManager)\r\n\r\nexport default Form.create()(ItemManager);","export function changePage(data) {\r\n    // console.log('action执行', data);\r\n    return {\r\n        type:'CHANGE_PAGE'\r\n        ,data\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Upload, Icon, Modal, message } from 'antd';\r\nimport {deleteImg} from \"../../../api\";\r\n\r\nclass PicturesWall extends Component {\r\n    state = {\r\n        previewVisible: false,\r\n        previewImage: '',\r\n        fileList: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n        // 如果是修改页面\r\n        this.handleRenderPreImgs()\r\n    }\r\n\r\n    handleRenderPreImgs = () => {\r\n        let fileList = this.props.imgs\r\n        fileList = fileList.map((item, index)=>({\r\n            uid: -index\r\n            , name: item\r\n            , status: 'done'\r\n            , url: `http://localhost:5000/images/${item}`\r\n        }))\r\n        this.setState({ fileList })\r\n    }\r\n\r\n    handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n    handlePreview = async file => {\r\n        // console.log(file);\r\n        this.setState({\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n        });\r\n    };\r\n\r\n    handleChange = async ({ fileList, file }) => {\r\n        // console.log('handleChange执行', fileList, file);\r\n        if( file['status'] === 'done' ){\r\n            message.success('图片上传成功!')\r\n            const {name, url} = file.response\r\n            file.name = name                        // 将该组件状态存储的图片的状态更改为由时间戳命名的名字\r\n            file.url = url                          // 设置该图片的url，此项为必须，如果更改名字后不设置url将不显示图片\r\n            fileList[fileList.length - 1] = file\r\n        } else if( file['status'] === 'removed' ){\r\n            const result = await deleteImg({name: file.name})\r\n            // console.log(result);\r\n            const {status, msg} = result.data\r\n            if( status === 0 ){\r\n                message.success(msg)\r\n            } else{\r\n                message.error(msg)\r\n            }\r\n        }\r\n        this.setState({ fileList })\r\n    };\r\n\r\n    getImagesInfo = ()=>{\r\n        return this.state.fileList.map(item=>item.name)\r\n    }\r\n\r\n    render() {\r\n        const { previewVisible, previewImage, fileList } = this.state;\r\n\r\n        const uploadButton = (\r\n            <div>\r\n                <Icon type=\"plus\" />\r\n                <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <Upload\r\n                    action=\"/img/upload\"\r\n                    listType=\"picture-card\"\r\n                    fileList={fileList}\r\n                    name={'images'}\r\n                    accept={'image/*'}\r\n                    onPreview={this.handlePreview}\r\n                    onChange={this.handleChange}\r\n                >\r\n                    {fileList.length >= 6 ? null : uploadButton}\r\n                </Upload>\r\n                <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n                    <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PicturesWall;","import React, { Component } from 'react';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nclass EditorConvertToHTML extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const html = this.props.details;\r\n    if (Boolean(html)) {\r\n      const contentBlock = htmlToDraft(html); // 这个\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n      const editorState = EditorState.createWithContent(contentState);\r\n\r\n      this.state = {\r\n        editorState,\r\n      };\r\n    } else{\r\n      this.state = {\r\n        editorState: EditorState.createEmpty()\r\n      }\r\n    }\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n\r\n  getEditorContent = ()=>draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <div>\r\n        <Editor\r\n          editorState={editorState}\r\n          wrapperClassName=\"demo-wrapper\"\r\n          editorClassName=\"demo-editor\"\r\n          onEditorStateChange={this.onEditorStateChange}\r\n          editorStyle={{border: '1px solid rgb(241,241,241)', height: 200, padding:10}}\r\n        />\r\n        {/*<textarea*/}\r\n        {/*  disabled*/}\r\n        {/*  value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}*/}\r\n        {/*/>*/}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default EditorConvertToHTML","import React, {Component} from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {\r\n    Cascader\r\n    , Icon\r\n    , Card\r\n    , Form\r\n    , Button\r\n    , message\r\n    , Input\r\n} from \"antd\";\r\nimport MyButton from \"../../../components/my_button\";\r\nimport {getClassOne, getCategories, goodsInfo, updateInfo, getUserAuthority, judgeAuthority} from \"../../../api\";\r\nimport PicturesWall from \"./pictures_wall\";\r\nimport EditorConvertToHTML from \"./editor\";\r\nimport {getUser} from \"../../../utils/storage\";\r\n\r\nconst { TextArea } = Input\r\n\r\nclass AddItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            options: []\r\n            , classification: []\r\n            , imgs: []\r\n            , name: ''\r\n            , description: ''\r\n            , price: 0\r\n            , details: ''\r\n            , page: 1\r\n            , loading: true\r\n        }\r\n        this.img = React.createRef()\r\n        this.editor = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleJudgeIfHasAuthority()\r\n    }\r\n\r\n    handleJudgeIfHasAuthority = async ()=>{\r\n        const {username} = getUser()\r\n        const result = await getUserAuthority(username)\r\n        const {authority} = result.data\r\n        const hasAuthority = judgeAuthority(this.props.history.location.pathname, authority)\r\n        if( hasAuthority ){\r\n            this.loadClassOne()\r\n        } else{\r\n            message.error('没有权限，给爷爬！')\r\n            this.props.history.goBack()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timer)\r\n    }\r\n\r\n    backToManage = () => {\r\n        this.props.history.push({\r\n            pathname: '/admin/manage'\r\n            , state: {\r\n                page: this.state.page\r\n            }\r\n        })\r\n    }\r\n\r\n    loadData = selectedOptions => {\r\n        const targetOption = selectedOptions[selectedOptions.length - 1];\r\n        targetOption.loading = true;\r\n        // console.log(targetOption);\r\n        // load options lazily\r\n        setTimeout(async () => {\r\n            targetOption.loading = false;\r\n            // console.log(targetOption.value);\r\n            let optionsChildren = await getCategories({name: targetOption.value})\r\n            if( optionsChildren.data.result.length ){   // 有值的情况下才渲染\r\n                optionsChildren = optionsChildren.data.result.map(item=>{\r\n                    return {\r\n                        label: item.name\r\n                        , value: item.name\r\n                    }\r\n                })\r\n                targetOption.children = optionsChildren\r\n            } else{\r\n                targetOption.isLeaf = true\r\n                // targetOption.children = null\r\n            }\r\n\r\n            this.setState({\r\n                options: [...this.state.options],\r\n            });\r\n        }, 1000);\r\n    };\r\n\r\n    loadClassOne = async ()=>{\r\n        let result = await getClassOne()\r\n        result = result.data.result\r\n        let options = result.map(item=>{\r\n            return {\r\n                value: item.name\r\n                , label: item.name\r\n                , isLeaf: false\r\n            }\r\n        })\r\n        // 对options处理一下，如果当前是修改商品页面同时修改的商品属于二级分类则渲染其二级分类到state中\r\n        const renderObj = await this.handleJudge(options)\r\n        this.setState({\r\n            ...renderObj\r\n            , loading: false\r\n        })\r\n    }\r\n\r\n    // 判断当前是添加商品还是修改商品\r\n    handleJudge = async (options)=>{\r\n        if( this.props.location.state ){    // 修改商品页面\r\n            // 获取原有的信息，同时设置好相应的flag\r\n            // console.log(this.props.location.state.info);\r\n            const {classification, name, imgs, description, price, details, _id} = this.props.location.state.info\r\n            this._id = _id\r\n            this.updateInfo = true\r\n\r\n            // 如果该商品属于二级分类，则要把其子项也渲染到组件的state中\r\n            if( classification.length === 2 ){\r\n                const targetOption = classification[0]\r\n                let optionsChildren = await getCategories({name: targetOption})\r\n                const optionIndex = options.findIndex(item=>item.value === targetOption)\r\n                // 处理一下要渲染的子项，使其拥有用于渲染的属性\r\n                optionsChildren = optionsChildren.data.result.map(item=>{\r\n                    item.value = item.name\r\n                    item.label = item.name\r\n                    return item\r\n                })\r\n                options[optionIndex].children = optionsChildren\r\n            }\r\n            return {options, name, imgs, description, price, details, classification}\r\n        } else {                            // 添加商品页面\r\n            this.updateInfo = false\r\n            return {options}\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                // console.log(this.editor.current.getEditorContent());    // 富文本编辑器内容\r\n                // console.log(this.img.current.getImagesInfo())           // 所选图片内容\r\n                const {name, description, price, classification} = values\r\n                const details = this.editor.current.getEditorContent()\r\n                const imgs = this.img.current.getImagesInfo()\r\n                const info = {name, description, price, classification, details, imgs, _id: this._id}\r\n\r\n                if( this.updateInfo ){  // 更新商品\r\n                    const result = await updateInfo(info)\r\n                    // console.log(result.data);\r\n                    const {status, msg} = result.data\r\n                    if( status === 0 ){ // 修改成功\r\n                        message.success(msg)\r\n                        this.timer = setTimeout(()=>{\r\n                            this.props.history.push('/admin/manage')\r\n                        }, 1000)\r\n                    } else{\r\n                        message.error(msg)\r\n                    }\r\n                } else{                 // 添加商品\r\n                    const result = await goodsInfo(info)\r\n                    // console.log(result.data);\r\n                    const {status, msg} = result.data\r\n                    if( status === 0 ){ // 添加成功\r\n                        message.success(msg)\r\n                        this.timer = setTimeout(()=>{\r\n                            this.props.history.push('/admin/manage')\r\n                        }, 1000)\r\n                    } else{\r\n                        message.error(msg)\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const title = (\r\n            <div className=\"title\">\r\n                <MyButton className={'backButton'} onClick={this.backToManage}>\r\n                    <Icon type=\"arrow-left\" style={{fontSize: '20px', color: 'rgb(24, 144, 255)'}}/>\r\n                </MyButton>\r\n                <span style={{marginLeft: '5px', userSelect: 'none'}}>\r\n                    {this.props.location.state ? '修改商品页面' : '添加商品页面'}\r\n                </span>\r\n            </div>\r\n        )\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                sm: { span: 8 },\r\n            },\r\n            wrapperCol: {\r\n                sm: { span: 12 },\r\n            },\r\n        }\r\n\r\n        const buttonLayout = {\r\n            wrapperCol: {\r\n                sm: { span: 12, offset: 8 },\r\n            },\r\n        }\r\n\r\n        const {getFieldDecorator} = this.props.form\r\n\r\n        const {classification, imgs, name, description, price, details, loading, options} = this.state\r\n        // console.log(options);\r\n\r\n        return (\r\n            <Card title={title} loading={loading}>\r\n                <Form {...formItemLayout}>\r\n                    <Form.Item label={'商品名称'}>\r\n                        {\r\n                            getFieldDecorator('name', {\r\n                                rules: [{required: true, message: '请输入商品名称'}]\r\n                                , initialValue: name\r\n                            })(\r\n                                <Input placeholder={'请输入商品名称'}/>\r\n                            )\r\n                        }\r\n                    </Form.Item>\r\n                    <Form.Item label={'商品简述'}>\r\n                        {\r\n                            getFieldDecorator('description', {\r\n                                rules: [{required: true, message: '请输入商品简述'}]\r\n                                , initialValue: description\r\n                            })(\r\n                                <TextArea placeholder=\"请输入商品简述\" autoSize />\r\n                            )\r\n                        }\r\n                    </Form.Item>\r\n                    <Form.Item label={'商品价格'}>\r\n                        {\r\n                            getFieldDecorator('price', {\r\n                                rules: [{required: true, message: '请输入商品价格'}]\r\n                                , initialValue: price\r\n                            })(\r\n                                <Input type={'number'} addonAfter={'元'}/>\r\n                            )\r\n                        }\r\n                    </Form.Item>\r\n                    <Form.Item label={'商品分类'}>\r\n                        {\r\n                            getFieldDecorator('classification', {\r\n                                rules: [{required: true, message: '请选择商品分类'}]\r\n                                , initialValue: classification\r\n                            })(\r\n                                <Cascader\r\n                                    options={options}\r\n                                    loadData={this.loadData}\r\n                                    changeOnSelect\r\n                                    placeholder={'请选择商品分类'}\r\n                                />\r\n                            )\r\n                        }\r\n                    </Form.Item>\r\n                    <Form.Item label={'商品图片'}>\r\n                        <PicturesWall ref={this.img} imgs={imgs}/>\r\n                    </Form.Item>\r\n                    <Form.Item label={'商品详细描述'}>\r\n                        <EditorConvertToHTML ref={this.editor} details={details}/>\r\n                    </Form.Item>\r\n                    <Form.Item {...buttonLayout}>\r\n                        <Button\r\n                            type={'primary'}\r\n                            onClick={this.handleSubmit}\r\n                            children={'确定'}\r\n                            style={{margin: 'auto'}}\r\n                        />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nAddItem = withRouter(AddItem)\r\nexport default Form.create()(AddItem);","import React, {Component} from 'react';\r\nimport { List, Icon, message } from 'antd';\r\nimport MyButton from \"../../../components/my_button\";\r\nimport {getUser} from \"../../../utils/storage\";\r\nimport {getUserAuthority, judgeAuthority} from \"../../../api\";\r\n\r\nclass Details extends Component {\r\n    state = {\r\n        info: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleJudgeIfHasAuthority()\r\n    }\r\n\r\n    handleJudgeIfHasAuthority = async ()=>{\r\n        const {username} = getUser()\r\n        const result = await getUserAuthority(username)\r\n        const {authority} = result.data\r\n        const hasAuthority = judgeAuthority(this.props.history.location.pathname, authority)\r\n        if( hasAuthority ){\r\n            const {info} = this.props.location.state\r\n            this.setState({ info })\r\n        } else{\r\n            message.error('没有权限，给爷爬！')\r\n            this.props.history.goBack()\r\n        }\r\n    }\r\n\r\n    handleGoBack = ()=>{\r\n        this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        const {info} = this.state\r\n        return (\r\n            <div className={'itemInfo'}>\r\n                <div className=\"header\">\r\n                    <MyButton className={'my-button'} onClick={this.handleGoBack}>返回</MyButton>\r\n                    <Icon type=\"arrow-left\" style={{color: 'rgb(130, 210, 255)'}}/>\r\n                </div>\r\n                <List\r\n                    size=\"large\"\r\n                    bordered\r\n                >\r\n                    <List.Item>\r\n                        <span className=\"detailsTitle cannotSelect\">\r\n                            商品名称：\r\n                        </span>\r\n                        <span className=\"detailsInfo cannotSelect\">\r\n                            {info.name}\r\n                        </span>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <span className=\"detailsTitle cannotSelect\">\r\n                            商品简介：\r\n                        </span>\r\n                        <span className=\"detailsInfo cannotSelect\">\r\n                            {info.description}\r\n                        </span>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <span className=\"detailsTitle cannotSelect\">\r\n                            商品分类：\r\n                        </span>\r\n                        <span className=\"detailsInfo cannotSelect\">\r\n                            {\r\n                                info.classification && info.classification.map((item, index)=>{\r\n                                    if( index > 0 ){\r\n                                        item = '/'+item\r\n                                    }\r\n                                    return item\r\n                                })\r\n                            }\r\n                        </span>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <span className=\"detailsTitle cannotSelect\">\r\n                            商品价格：\r\n                        </span>\r\n                        <span className=\"detailsInfo cannotSelect\">\r\n                            { info.price }\r\n                        </span>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <span className=\"detailsTitle cannotSelect\">\r\n                            商品图片：\r\n                        </span>\r\n                        <span className=\"detailsInfo cannotSelect\">\r\n                            {\r\n                                info.imgs && info.imgs.map((item, index)=>{\r\n                                    // http://localhost:5000/images/\r\n                                    const src = '/images/' + item\r\n                                    return (<img key={index} src={src} alt=\"\" height={150}/> )\r\n                                })\r\n                            }\r\n                        </span>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <span className=\"detailsTitle cannotSelect\">\r\n                            商品详述：\r\n                        </span>\r\n                        <span className=\"detailsInfo cannotSelect\">\r\n                            {<div dangerouslySetInnerHTML={{__html: info.details}}></div>}\r\n                        </span>\r\n                    </List.Item>\r\n                </List>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Details;","import React, {Component, Fragment} from 'react';\r\nimport {\r\n    Switch\r\n    , Route\r\n} from 'react-router-dom'\r\n\r\nimport './index.scss'\r\nimport ItemManager from \"./item_manager\";\r\nimport AddItem from \"./addItem\";\r\nimport Details from \"./details\";\r\nclass Manage extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Switch>\r\n                    <Route path={'/admin/manage'} exact component={ItemManager} />\r\n                    <Route path={'/admin/manage/addItem'} component={AddItem} />\r\n                    <Route path={'/admin/manage/details'} component={Details} />\r\n                </Switch>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Manage;","import React, {Component} from 'react';\r\nimport {\r\n    Form\r\n    , Input\r\n    , Icon\r\n    , Select\r\n} from \"antd\";\r\nimport {getRoles} from \"../../api\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass AddInfo extends Component {\r\n    state = {\r\n        roles: []\r\n        , userInfo: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleGetRoles()\r\n    }\r\n\r\n    handleGetRoles = async ()=>{\r\n        const result = await getRoles()\r\n        this.setState({\r\n            roles: result.data.allRoles\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        const {roles} = this.state\r\n\r\n        const {userInfo} = this.props\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12 },\r\n            },\r\n        };\r\n\r\n        return (\r\n            <Form {...formItemLayout}>\r\n                <Form.Item label={'用户名'}>\r\n                    {getFieldDecorator('username', {\r\n                        rules: [\r\n                            { required: true, message: '请输入用户名' }\r\n                            , { min: 6, message:'用户名最小长度为6位' }\r\n                            , { max: 16, message:'用户名最大长度为16位' }\r\n                        ],\r\n                        initialValue: userInfo.username\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"用户名\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label={'密码'}>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [\r\n                            { required: true, message: '请输入密码' }\r\n                            , { min: 8, message: '密码最少长度为8位' }\r\n                            , { max: 16, message: '密码最大长度为16位' }\r\n                        ],\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"密码\"\r\n                            type={'password'}\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label={'手机号'}>\r\n                    {getFieldDecorator('phone', {\r\n                        rules: [\r\n                            { required: true, message: '请输入手机号' }\r\n                            // , { len: 11, message: '手机号长度为11位' }\r\n                        ],\r\n                        initialValue: userInfo.phone\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"mobile\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"手机号\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label={'角色'}>\r\n                    {getFieldDecorator('role', {\r\n                        rules: [{ required: true, message: '请选择角色' }],\r\n                        initialValue: userInfo.role\r\n                    })(\r\n                        <Select placeholder={'请选择角色'}>\r\n                            {\r\n                                roles.length && roles.reduce((pre, next)=>{\r\n                                    pre.push(<Option key={next.name}>{next.name}</Option>)\r\n                                    return pre\r\n                                }, [])\r\n                            }\r\n                        </Select>\r\n                    )}\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nAddInfo = Form.create()(AddInfo)\r\nexport default AddInfo;","import React, {Component} from 'react';\r\nimport {\r\n    Card\r\n    , Table\r\n    , Button\r\n    , Modal\r\n    , message\r\n    , Divider\r\n} from \"antd\";\r\nimport './index.scss'\r\nimport {addUser, getUsers, updateUser, deleteUser, getUserAuthority, judgeAuthority} from \"../../api\";\r\nimport {getUser} from \"../../utils/storage\";\r\nimport {PAGE_SIZE} from \"../../utils/constants\";\r\nimport AddInfo from \"./addInfo\";\r\nimport MyButton from \"../../components/my_button\";\r\n\r\nconst { confirm } = Modal;\r\n\r\nclass User extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            visible: false\r\n            , users: []\r\n            , selectedUser : {}\r\n            , loading: true\r\n        }\r\n        this.modify = false\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            title: '用户名',\r\n            dataIndex: 'username',\r\n            key: 'username',\r\n            // render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: '创建时间',\r\n            dataIndex: 'create_time',\r\n            key: 'create_time',\r\n            render: text => {\r\n                return (<span>{new Date(text).toLocaleString()}</span>)\r\n            }\r\n        },\r\n        {\r\n            title: '手机号',\r\n            dataIndex: 'phone',\r\n            key: 'phone',\r\n        },\r\n        {\r\n            title: '所属角色',\r\n            dataIndex: 'role',\r\n            key: 'role',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (text, record) => {\r\n                // console.log(record);\r\n                return (\r\n                    <span>\r\n                        <MyButton\r\n                            style={{color:'rgb(24,144,255)'}}\r\n                            onClick={()=>{this.handleModify(record)}}\r\n                        >修改</MyButton>\r\n                        <Divider type=\"vertical\" />\r\n                        <MyButton\r\n                            style={{color:'rgb(24,144,255)'}}\r\n                            onClick={()=>{this.showDeleteConfirm(record)}}\r\n                        >删除</MyButton>\r\n                    </span>\r\n                )},\r\n        },\r\n    ];\r\n\r\n    componentDidMount() {\r\n        this.handleJudgeIfHasAuthority()\r\n    }\r\n\r\n    handleJudgeIfHasAuthority = async ()=>{\r\n        const {username} = getUser()\r\n        const result = await getUserAuthority(username)\r\n        const {authority} = result.data\r\n        const hasAuthority = judgeAuthority(this.props.history.location.pathname, authority)\r\n        if( hasAuthority ){\r\n            this.getUsers()\r\n        } else{\r\n            message.error('没有权限，给爷爬！')\r\n            this.props.history.goBack()\r\n        }\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = () => {\r\n        // console.log(this.form);\r\n        this.form.props.form.validateFields(async (err, values) => {\r\n            if (!err) {\r\n                // console.log('Received values of form: ', values);\r\n                let result = null\r\n                const {_id} = this.state.selectedUser\r\n                values._id = _id\r\n                if( this.modify ){  // 修改用户信息\r\n                    result = await updateUser(values)\r\n                } else{             // 添加用户信息\r\n                    result = await addUser(values)\r\n                }\r\n                const {status, msg} = result.data\r\n                if( status === 0 ){\r\n                    message.success(msg)\r\n                    this.form.props.form.resetFields()\r\n                    this.getUsers()\r\n                    this.setState({\r\n                        visible: false,\r\n                        selectedUser: {}\r\n                    });\r\n                    this.modify = false\r\n                } else{\r\n                    message.error(msg)\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.form.props.form.resetFields()\r\n        this.modify = false\r\n        this.setState({\r\n            visible: false,\r\n            selectedUser: {}\r\n        });\r\n    };\r\n\r\n    getUsers = async ()=>{\r\n        const data = await getUsers()\r\n        // console.log(data);\r\n        const {users} = data.data\r\n        // console.log(users);\r\n        this.setState({ users, loading: false })\r\n    }\r\n\r\n    handleModify = (selectedUser)=>{\r\n        this.modify = true\r\n        this.setState({ visible: true, selectedUser })\r\n    }\r\n\r\n    showDeleteConfirm = (user)=>{\r\n        confirm({\r\n            title: `你确定要删除${user.username}吗`,\r\n            okText: '确定',\r\n            okType: 'danger',\r\n            cancelText: '取消',\r\n            onOk: async ()=> {\r\n                const result = await deleteUser(user)\r\n                const {status, msg} = result.data\r\n                if( status === 0 ){\r\n                    message.success(msg)\r\n                    this.getUsers()\r\n                } else{\r\n                    message.error(msg)\r\n                }\r\n            },\r\n            onCancel: ()=> {\r\n                this.getUsers()\r\n            },\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const title = (\r\n            <span>\r\n                <Button type={'primary'} icon=\"plus\" children={'添加用户'}  onClick={this.showModal}/>\r\n            </span>\r\n        )\r\n\r\n        const {users, selectedUser, loading} = this.state\r\n\r\n        return (\r\n            <Card title={title}>\r\n                <Modal\r\n                    title={this.modify?\"修改用户\":\"添加用户\"}\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                    okText={'确定'}\r\n                    cancelText={'取消'}\r\n                >\r\n                    <AddInfo\r\n                        wrappedComponentRef={(form) => this.form = form}\r\n                        userInfo={selectedUser}\r\n                    />\r\n                </Modal>\r\n                <Table\r\n                    columns={this.columns}\r\n                    dataSource={users}\r\n                    pagination={{\r\n                        defaultPageSize: PAGE_SIZE\r\n                    }}\r\n                    rowKey={'_id'}\r\n                    loading={loading}\r\n                />\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default User;","import React, {Component} from 'react';\r\nimport {\r\n    Form\r\n    , Input\r\n} from \"antd\";\r\n\r\nclass AddCharacter extends Component {\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form>\r\n                <Form.Item>\r\n                    {getFieldDecorator('roleName', {\r\n                        rules: [{ required: true, message: '角色名不能为空' }],\r\n                    })(\r\n                        <Input placeholder=\"请输入添加角色名\"/>,\r\n                    )}\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\nAddCharacter = Form.create()(AddCharacter)\r\n\r\nexport default AddCharacter;","import React, {Component} from 'react';\r\nimport {\r\n    Form\r\n    , Tree\r\n    , Input\r\n} from \"antd\";\r\nimport menuConfig from '../../config/sider'\r\n\r\nconst { TreeNode } = Tree;\r\n\r\nclass SetAuthority extends Component {\r\n    state = {\r\n        menu: []\r\n        , authority: []\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        // console.log(this.props.role.authority);\r\n        const {authority} = this.props.role\r\n        const menu = this.handleRenderTreeData(menuConfig)\r\n        this.setState({ menu, authority })\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\r\n        // console.log(nextProps);\r\n        const {authority} = nextProps.role\r\n        this.setState({ authority })\r\n    }\r\n\r\n    onCheck = (checkedKeys, info) => {\r\n        // console.log('onCheck', checkedKeys, info);\r\n        this.setState({\r\n            authority: checkedKeys\r\n        })\r\n    };\r\n\r\n    handleRenderTreeData = (dataSource)=>{\r\n        return dataSource.reduce((pre, next)=>{\r\n            if( next.children ){    // 有子项\r\n                pre.push(\r\n                    <TreeNode title={next.title} key={next.key} >\r\n                        {\r\n                            this.handleRenderTreeData(next.children)\r\n                        }\r\n                    </TreeNode>\r\n                )\r\n            } else{                 // 只有自己本项\r\n                pre.push(<TreeNode title={next.title} key={next.route} />)\r\n            }\r\n            return pre\r\n        }, [])\r\n    }\r\n\r\n    render() {\r\n        const {menu, authority} = this.state\r\n        return (\r\n            <Form>\r\n                <Form.Item>\r\n                    <Input disabled value={this.props.role.name}/>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Tree\r\n                        checkable\r\n                        selectable={false}       // 写了这行代码后点击文字也能选中复选框了\r\n                        defaultExpandAll={true}\r\n                        checkedKeys={authority}\r\n                        onCheck={this.onCheck}\r\n                    >\r\n                        { menu }\r\n                    </Tree>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n// SetAuthority = Form.create()(SetAuthority)\r\n// 写了上面这行代码之后在父组件中就获取不到该组件应有的 state\r\n\r\nexport default SetAuthority;","import React, {Component} from 'react';\r\nimport {\r\n    Card\r\n    , Modal\r\n    , Button\r\n    , Table\r\n    , message\r\n} from \"antd\";\r\n\r\nimport './index.scss'\r\nimport AddCharacter from \"./add_character\";\r\nimport {addRoles, getRoles, setRoleAuthority, getSingleUser, getUserAuthority, judgeAuthority} from \"../../api\";\r\nimport {getUser, removeUser} from \"../../utils/storage\";\r\nimport SetAuthority from \"./set_authority\";\r\n\r\n\r\nclass Character extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.setAuthority = React.createRef()\r\n    }\r\n\r\n    state = {\r\n        visible: false              // 添加角色弹窗是否可见\r\n        , data: []                  // 角色渲染数据源\r\n        , loading: true             // 列表加载状态\r\n        , selectedRowKeys: []       // 当前列表选中行\r\n        , role: {}                  // 当前列表选中行信息\r\n        , authority: false          // 设置角色权限弹窗是否可见\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.handleJudgeIfHasAuthority()\r\n    }\r\n\r\n    handleJudgeIfHasAuthority = async ()=>{\r\n        const {username} = getUser()\r\n        const result = await getUserAuthority(username)\r\n        const {authority} = result.data\r\n        const hasAuthority = judgeAuthority(this.props.history.location.pathname, authority)\r\n        if( hasAuthority ){\r\n            this.handleGetRoles()\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        } else{\r\n            message.error('没有权限，给爷爬！')\r\n            this.props.history.goBack()\r\n        }\r\n    }\r\n\r\n    // 获取所有角色的信息\r\n    handleGetRoles = async () => {\r\n        const result = await getRoles()\r\n        const {status, allRoles, msg} = result.data\r\n\r\n        if( status === 0 ){\r\n            this.setState({ data: allRoles })\r\n        } else{\r\n            message.error(msg)\r\n        }\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = e => {\r\n        this.form.props.form.validateFields(async (err, values) => {\r\n            if (!err) {\r\n                const {roleName} = values\r\n                const result = await addRoles({roleName, create_time: new Date().toLocaleString()})\r\n                const {status, msg} = result.data\r\n                if( status === 0 ){\r\n                    message.success(msg)\r\n                    this.form.props.form.resetFields()\r\n                    this.setState({\r\n                        visible: false,\r\n                    });\r\n                    this.handleGetRoles()\r\n                } else{\r\n                    message.error(msg)\r\n                }\r\n            }\r\n        })\r\n    };\r\n\r\n    handleCancel = e => {\r\n        this.setState({\r\n            visible: false,\r\n            authority: false\r\n        });\r\n    };\r\n\r\n    showAuthority = ()=>{\r\n        this.setState({ authority: true })\r\n    }\r\n\r\n    handleAuthorityOk = async e =>{\r\n        const {role} = this.state\r\n        const {authority} = this.setAuthority.current.state\r\n        const {username} = getUser()\r\n        const auth_time = new Date().toLocaleString()\r\n        const roleName = role.name\r\n\r\n        // 给当前角色信息补充上授权内容、授权人、授权时间\r\n        role.authority = authority\r\n        role.auth_name = username\r\n        role.auth_time = auth_time\r\n\r\n        // 向后台发送数据并且获取当前登录用户角色\r\n        const dataArr = await Promise.all([setRoleAuthority(role), getSingleUser(username)])\r\n        const userRole = dataArr[1]['data']['user']['role']\r\n        // console.log(dataArr);\r\n\r\n        const {status, msg} = dataArr[0]['data']\r\n        if( status === 0 ){\r\n            if( userRole === roleName ){\r\n                message.success('修改权限成功！')\r\n                removeUser()\r\n                this.props.history.push('/login')\r\n            } else{\r\n                message.success(msg)\r\n                this.setState({ authority: false })\r\n            }\r\n        } else{\r\n            message.error(msg)\r\n        }\r\n\r\n    }\r\n\r\n    columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'create_time',\r\n            dataIndex: 'create_time',\r\n        },\r\n        {\r\n            title: 'auth_time',\r\n            dataIndex: 'auth_time',\r\n        },\r\n        {\r\n            title: 'auth_name',\r\n            dataIndex: 'auth_name',\r\n        },\r\n    ];\r\n\r\n    render() {\r\n        const {data, loading, role} = this.state\r\n\r\n        const title = (\r\n            <span>\r\n                <Button type={'primary'} icon={'plus'} onClick={this.showModal}>添加角色</Button>\r\n                <Button\r\n                    type={'primary'}\r\n                    style={{marginLeft: 10}}\r\n                    disabled={!this.state.role._id}\r\n                    onClick={this.showAuthority}\r\n                >设置角色权限</Button>\r\n            </span>\r\n        )\r\n\r\n        return (\r\n            <Card title={title}>\r\n                {/*添加角色弹窗*/}\r\n                <Modal\r\n                    title=\"请添加角色\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                    okText={'确定'}\r\n                    cancelText={'取消'}\r\n                >\r\n                    <AddCharacter wrappedComponentRef={(form) => this.form = form}/>\r\n                </Modal>\r\n                {/*角色渲染列表*/}\r\n                <Table\r\n                    rowSelection={{\r\n                        type: 'radio'\r\n                        , selectedRowKeys: this.state.selectedRowKeys\r\n                        , onChange: (selectedRowKeys, selectedRows) => {\r\n                            this.setState({ selectedRowKeys, role: selectedRows[0] })\r\n                        }\r\n                    }}\r\n                    pagination={{defaultPageSize: 4}}\r\n                    loading={loading}\r\n                    columns={this.columns}\r\n                    dataSource={data}\r\n                    rowKey={'_id'}\r\n                    onRow={(record, index)=>{\r\n                        return {\r\n                            onClick: event => {\r\n                                this.setState({ selectedRowKeys: [record._id], role: record })\r\n                            }, // 点击行\r\n                        };\r\n                    }}\r\n                />\r\n                {/*设置角色权限弹窗*/}\r\n                <Modal\r\n                    title={'角色设置弹窗'}\r\n                    visible={this.state.authority}\r\n                    onOk={this.handleAuthorityOk}\r\n                    onCancel={this.handleCancel}\r\n                    okText={'确定'}\r\n                    cancelText={'取消'}\r\n                    // ref={this.setAuthority}\r\n                >\r\n                    <SetAuthority\r\n                        role={role}\r\n                        ref={this.setAuthority}\r\n                    />\r\n                </Modal>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Character;","import Index from \"../pages/index\";\r\nimport Classification from \"../pages/shop/classification\";\r\nimport Manage from \"../pages/shop/manage\";\r\nimport User from \"../pages/user\";\r\nimport Character from \"../pages/character\";\r\nimport LineChart from \"../pages/chart/line\";\r\nimport BarChart from \"../pages/chart/bar\";\r\nimport PieChart from \"../pages/chart/pie\";\r\n\r\nexport default [\r\n    {\r\n        title: '首页'\r\n        , icon: 'home'\r\n        , route: '/admin/index'\r\n        , component: Index\r\n    }\r\n    , {\r\n        title: '商品'\r\n        , icon: 'appstore'\r\n        , key: 'goods'\r\n        , children: [\r\n            {\r\n                title: '分类管理'\r\n                , icon: 'table'\r\n                , route: '/admin/classification'\r\n                , component: Classification\r\n            }\r\n            , {\r\n                title: '商品管理'\r\n                , icon: 'tool'\r\n                , route: '/admin/manage'\r\n                , component: Manage\r\n            }\r\n        ]\r\n    }\r\n    , {\r\n        title: '用户管理'\r\n        , icon: 'user'\r\n        , route: '/admin/user'\r\n        , component: User\r\n    }\r\n    , {\r\n        title: '角色管理'\r\n        , icon: 'safety'\r\n        , route: '/admin/character'\r\n        , component: Character\r\n    }\r\n    , {\r\n        title: '图形图表'\r\n        , icon: 'area-chart'\r\n        , key: 'chart'\r\n        , children: [\r\n            {\r\n                title: '折线图'\r\n                , icon: 'line-chart'\r\n                , route: '/admin/line'\r\n                , component: LineChart\r\n            }\r\n            , {\r\n                title: '柱状图'\r\n                , icon: 'bar-chart'\r\n                , route: '/admin/bar'\r\n                , component: BarChart\r\n            }\r\n            , {\r\n                title: '饼状图'\r\n                , icon: 'pie-chart'\r\n                , route: '/admin/pie'\r\n                , component: PieChart\r\n            }\r\n        ]\r\n    }\r\n]","import React, {Component} from 'react';\r\nimport {\r\n    message\r\n    , Card\r\n    , Button\r\n} from \"antd\";\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport {getUser} from \"../../../utils/storage\";\r\nimport {getUserAuthority, judgeAuthority} from \"../../../api\";\r\nclass LineChart extends Component {\r\n    state = {\r\n        books:[1000,2000,1500,3000,2000,1200,800],//预订量\r\n        sales:[800,1500,1300,2800,1500,1000,500],   //销量\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleJudgeIfHasAuthority()\r\n    }\r\n\r\n    handleJudgeIfHasAuthority = async ()=>{\r\n        const {username} = getUser()\r\n        const result = await getUserAuthority(username)\r\n        const {authority} = result.data\r\n        const hasAuthority = judgeAuthority(this.props.history.location.pathname, authority)\r\n        if( hasAuthority ){\r\n            /* 做一些初始化要做的事 */\r\n        } else{\r\n            message.error('没有权限，给爷爬！')\r\n            this.props.history.goBack()\r\n        }\r\n    }\r\n\r\n    getOption1 = ()=>{\r\n        let options = {\r\n            title:{\r\n                text:'折线图-1',\r\n                textStyle:{\r\n                    color:'pink'\r\n                }\r\n\r\n            },\r\n            legend: {//图例组件\r\n                data: ['存货'],\r\n                icon:'circle'\r\n\r\n            },\r\n            tooltip: {  //提示框组件\r\n                trigger: 'axis'\r\n            },\r\n            xAxis:{\r\n                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\r\n            },\r\n            yAxis:{},\r\n            series:[\r\n                {\r\n                    name:'存货',\r\n                    type:'line', //柱形图\r\n                    data:[1000,2000,1500,3000,2000,1200,800]\r\n                }\r\n            ]\r\n        }\r\n        return options\r\n    }\r\n\r\n\r\n    getOption2 = (books,sales)=>{\r\n        let options = {\r\n            title:{\r\n                text:'折线图-2',\r\n                textStyle:{\r\n                    color:'pink'\r\n                }\r\n\r\n            },\r\n            legend: {//图例组件\r\n                data: ['订单量','销量'],\r\n                icon:'circle'\r\n\r\n            },\r\n            tooltip: {  //提示框组件\r\n                trigger: 'axis'\r\n            },\r\n            xAxis:{\r\n                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\r\n            },\r\n            yAxis:{},\r\n            series:[    //数据源\r\n                {\r\n                    name:'订单量',\r\n                    type:'line',\r\n                    data:books\r\n                },\r\n                {\r\n                    name:'销量',\r\n                    type:'line',\r\n                    data:sales\r\n                }\r\n            ]\r\n        }\r\n        return options\r\n    }\r\n\r\n    update = ()=>{\r\n        this.setState(state=>({\r\n            books:state.books.map(item=>item+100),\r\n            sales:state.sales.map(item=>item-20),\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const title = <Button type={'primary'} onClick={this.update}>更新数据</Button>\r\n        const {books,sales} = this.state\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <ReactEcharts option={this.getOption1()} />\r\n                </Card>\r\n                <Card title={title}>\r\n                    <ReactEcharts option={this.getOption2(books,sales)} />\r\n                </Card>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default LineChart;","import React, {Component} from 'react';\r\nimport {\r\n    message\r\n} from \"antd\";\r\nimport {getUser} from \"../../../utils/storage\";\r\nimport {getUserAuthority, judgeAuthority} from \"../../../api\";\r\nimport {Card, Button} from \"antd\";\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nclass BarChart extends Component {\r\n    state = {\r\n        books:[1000,2000,1500,3000,2000,1200,800],//预订量\r\n        sales:[800,1500,1300,2800,1500,1000,500],   //销量\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleJudgeIfHasAuthority()\r\n    }\r\n\r\n    handleJudgeIfHasAuthority = async ()=>{\r\n        const {username} = getUser()\r\n        const result = await getUserAuthority(username)\r\n        const {authority} = result.data\r\n        const hasAuthority = judgeAuthority(this.props.history.location.pathname, authority)\r\n        if( hasAuthority ){\r\n            /* 做一些初始化要做的事 */\r\n        } else{\r\n            message.error('没有权限，给爷爬！')\r\n            this.props.history.goBack()\r\n        }\r\n    }\r\n\r\n    getOption1 = ()=>{\r\n        let options = {\r\n            title:{\r\n                text:'柱形图-1',\r\n                textStyle:{\r\n                    color:'pink'\r\n                }\r\n\r\n            },\r\n            legend: {//图例组件\r\n                data: ['存货'],\r\n                icon:'circle'\r\n\r\n            },\r\n            tooltip: {  //提示框组件\r\n                trigger: 'axis'\r\n            },\r\n            xAxis:{\r\n                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\r\n            },\r\n            yAxis:{},\r\n            series:[\r\n                {\r\n                    name:'存货',\r\n                    type:'bar', //柱形图\r\n                    data:[1000,2000,1500,3000,2000,1200,800]\r\n                }\r\n            ]\r\n        }\r\n        return options\r\n    }\r\n\r\n\r\n    getOption2 = (books,sales)=>{\r\n        let options = {\r\n            title:{\r\n                text:'柱形图-2',\r\n                textStyle:{\r\n                    color:'pink'\r\n                }\r\n\r\n            },\r\n            legend: {//图例组件\r\n                data: ['订单量','销量'],\r\n                icon:'circle'\r\n\r\n            },\r\n            tooltip: {  //提示框组件\r\n                trigger: 'axis'\r\n            },\r\n            xAxis:{\r\n                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\r\n            },\r\n            yAxis:{},\r\n            series:[    //数据源\r\n                {\r\n                    name:'订单量',\r\n                    type:'bar', //柱形图\r\n                    data:books\r\n                },\r\n                {\r\n                    name:'销量',\r\n                    type:'bar', //柱形图\r\n                    data:sales\r\n                }\r\n            ]\r\n        }\r\n        return options\r\n    }\r\n\r\n    update = ()=>{\r\n        this.setState(state=>({\r\n            books:state.books.map(item=>item+100),\r\n            sales:state.sales.map(item=>item-20),\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const title = <Button type={'primary'} onClick={this.update}>更新数据</Button>\r\n        const {books,sales} = this.state\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <ReactEcharts option={this.getOption1()} />\r\n                </Card>\r\n                <Card title={title}>\r\n                    <ReactEcharts option={this.getOption2(books,sales)} />\r\n                </Card>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default BarChart;","import React, {Component} from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport {\r\n    Card\r\n} from 'antd'\r\n\r\nexport default class PieChart extends Component {\r\n\r\n    getOption1 = ()=>{\r\n        let options = {\r\n            title:{\r\n                text:'饼图-1',\r\n                textStyle:{\r\n                    color:'pink'\r\n                },\r\n                // x:'center'\r\n\r\n            },\r\n            legend: {//图例组件\r\n                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\r\n                icon:'circle',\r\n                orient:'vertical',\r\n                right:20,\r\n                top:20,\r\n            },\r\n            tooltip: {  //提示框组件\r\n                trigger: 'item',\r\n                formatter:'{a}<br/>{b}:{c}({d}%)'\r\n            },\r\n            series:[\r\n                {\r\n                    name:'存货',  //{a}\r\n                    type:'pie', //柱形图\r\n                    data:[{\r\n                        value:1000, //{c}\r\n                        name:'周一' //在折线的后面添加文字  {b}\r\n                    },{\r\n                        value:2000,\r\n                        name:'周二'\r\n                    },{\r\n                        value:1500,\r\n                        name:'周三'\r\n                    },{\r\n                        value:3000,\r\n                        name:'周四'\r\n                    },{\r\n                        value:1200,\r\n                        name:'周五'\r\n                    },{\r\n                        value:2000,\r\n                        name:'周六'\r\n                    },{\r\n                        value:800,\r\n                        name:'周日'\r\n                    }]\r\n                }\r\n            ]\r\n        }\r\n        return options\r\n    }\r\n\r\n    getOption2 = ()=>{\r\n        let options = {\r\n            title:{\r\n                text:'饼图-3',\r\n                textStyle:{\r\n                    color:'pink'\r\n                },\r\n                // x:'center'\r\n            },\r\n            legend: {//图例组件\r\n                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\r\n                icon:'circle',\r\n                orient:'vertical',\r\n                right:20,\r\n                top:20,\r\n\r\n            },\r\n            tooltip: {  //提示框组件\r\n                trigger: 'item',\r\n                formatter:'{a}<br/>{b}:{c}({d}%)'\r\n            },\r\n            series:[\r\n                {\r\n                    name:'存货',  //{a}\r\n                    type:'pie', //柱形图\r\n                    radius:['50%','70%'], //配置圆环\r\n                    // roseType:'radius',\r\n\r\n                    data:[{\r\n                        value:1000,  //{c}\r\n                        name:'周一' //在折线的后面添加文字  {b}\r\n                    },{\r\n                        value:2000,\r\n                        name:'周二'\r\n                    },{\r\n                        value:1500,\r\n                        name:'周三'\r\n                    },{\r\n                        value:3000,\r\n                        name:'周四'\r\n                    },{\r\n                        value:1200,\r\n                        name:'周五'\r\n                    },{\r\n                        value:2000,\r\n                        name:'周六'\r\n                    },{\r\n                        value:800,\r\n                        name:'周日'\r\n                    }]\r\n                }\r\n            ]\r\n        }\r\n        return options\r\n    }\r\n\r\n    getOption3 = ()=>{\r\n        let options = {\r\n            title:{\r\n                text:'饼图-2',\r\n                textStyle:{\r\n                    color:'pink'\r\n                },\r\n                // x:'center'\r\n\r\n            },\r\n            legend: {//图例组件\r\n                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\r\n                icon:'circle',\r\n                orient:'vertical',\r\n                right:20,\r\n                top:20,\r\n\r\n            },\r\n            tooltip: {  //提示框组件\r\n                trigger: 'item',\r\n                formatter:'{a}<br/>{b}:{c}({d}%)'\r\n            },\r\n            series:[\r\n                {\r\n                    name:'存货',  //{a}\r\n                    type:'pie', //柱形图\r\n                    // radius:['50%','70%'], 配置圆环\r\n                    roseType:'radius',\r\n\r\n                    data:[{\r\n                        value:1000,  //{c}\r\n                        name:'周一' //在折线的后面添加文字  {b}\r\n                    },{\r\n                        value:2000,\r\n                        name:'周二'\r\n                    },{\r\n                        value:1500,\r\n                        name:'周三'\r\n                    },{\r\n                        value:3000,\r\n                        name:'周四'\r\n                    },{\r\n                        value:1200,\r\n                        name:'周五'\r\n                    },{\r\n                        value:2000,\r\n                        name:'周六'\r\n                    },{\r\n                        value:800,\r\n                        name:'周日'\r\n                    }].sort((a,b)=>a.value-b.value)\r\n                }\r\n            ]\r\n        }\r\n        return options\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <ReactEcharts option={this.getOption1()} />\r\n                </Card>\r\n                <Card>\r\n                    <ReactEcharts option={this.getOption2()} />\r\n                </Card>\r\n                <Card>\r\n                    <ReactEcharts option={this.getOption3()} />\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {PureComponent} from 'react';\r\nimport {\r\n    withRouter\r\n} from 'react-router-dom'\r\nimport {Modal} from \"antd\";\r\nimport {removeUser, getUser} from \"../../utils/storage\";\r\n// import {getWeather} from \"../../api\";\r\nimport menu from '../../config/sider'\r\nimport './index.scss'\r\n\r\nconst { confirm } = Modal\r\n\r\nclass MyHeader extends PureComponent {\r\n    state = {\r\n        currentTime: new Date().toLocaleString()\r\n        , dayPictureUrl: ''\r\n        , weather: ''\r\n        , temperature: ''\r\n        , wind: ''\r\n        , title: ''\r\n        , username: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleGetCurrentTime()\r\n        // this.handleGetWeather()\r\n        this.handleGetTitle(menu)\r\n        const {username} = getUser()\r\n        this.setState({\r\n            username\r\n        })\r\n    }\r\n\r\n    UNSAFE_componentWillUpdate(nextProps, nextState, nextContext) {\r\n        this.handleGetTitle(menu)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer)\r\n    }\r\n\r\n    handleExit = ()=>{\r\n        confirm({\r\n            title: '你确定要退出吗?'\r\n            , cancelText: '取消'\r\n            , okText: '确定'\r\n            , onOk : () =>{\r\n                removeUser()\r\n                this.props.history.push('/login')\r\n            }\r\n            , onCancel: () => {}\r\n        });\r\n    }\r\n\r\n    handleGetCurrentTime = ()=>{\r\n        this.timer = setInterval(()=>{\r\n            const currentTime = new Date().toLocaleString()\r\n            this.setState({currentTime})\r\n        }, 1000)\r\n    }\r\n\r\n    // handleGetWeather = async ()=>{\r\n    //     const weatherResult = await getWeather('广州')\r\n    //     if( weatherResult.status === 'success' ){\r\n    //         const {dayPictureUrl, weather, temperature, wind} = weatherResult['results'][0]['weather_data'][0]\r\n    //         this.setState({\r\n    //             dayPictureUrl\r\n    //             , weather\r\n    //             , temperature\r\n    //             , wind\r\n    //         })\r\n    //     } else{\r\n    //         this.handleWrongLocationInfo()\r\n    //     }\r\n    // }\r\n\r\n    // handleWrongLocationInfo = ()=>{\r\n    //     Modal.error({\r\n    //         title: '地理位置获取错误',\r\n    //         content: '请检查当前定位...',\r\n    //     });\r\n    // }\r\n\r\n    handleGetTitle = (arr)=>{\r\n        const url = this.props.location.pathname\r\n        // console.log(url);\r\n        arr.some((item)=>{\r\n            if( item.children ){\r\n                this.handleGetTitle(item.children)\r\n                return false\r\n            } else{\r\n                const flag = new RegExp(item.route).test(url)\r\n                if( item.route === url || flag ){\r\n                    this.setState({\r\n                        title: item.title\r\n                    })\r\n                    return true\r\n                }\r\n            }\r\n            return false //单纯用来消除页面控制台警告，正常情况下不会走到这里\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            currentTime\r\n            // , dayPictureUrl\r\n            // , temperature\r\n            // , weather\r\n            // , wind\r\n            // , title\r\n            , username\r\n        } = this.state\r\n        return (\r\n            <div className={'header'}>\r\n                <div className=\"header-top\">\r\n                    <div className=\"top-box\">\r\n                        <span>Hello, {username}</span>\r\n                        <button onClick={this.handleExit}>exit</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"header-bottom\">\r\n                    <div className=\"header-title\">\r\n                        {this.props.title || this.state.title}\r\n                    </div>\r\n                    <div className=\"weather-box\">\r\n                        <span className=\"time\">{currentTime}</span>\r\n                        {/*<img src={dayPictureUrl} alt=\"\" width={30} height={25}/>*/}\r\n                        {/*<span className=\"weather\">{weather}</span>*/}\r\n                        {/*<span className=\"temperature\">{temperature}</span>*/}\r\n                        {/*<span className=\"wind\">{wind}</span>*/}\r\n                    </div>\r\n                </div>\r\n                <div className=\"triangle\">\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(MyHeader);","import React, {PureComponent} from 'react';\r\nimport {message, Layout, Menu, Icon} from \"antd\";\r\nimport {\r\n    NavLink\r\n    , Redirect\r\n    , Route\r\n    , Switch\r\n} from \"react-router-dom\";\r\nimport {getUser} from \"../../utils/storage\";\r\nimport menu from '../../config/sider'\r\nimport './index.scss'\r\nimport MyHeader from \"../../components/my_header\";\r\nimport {getUserAuthority} from \"../../api\";\r\n\r\nconst { Content, Footer, Sider } = Layout\r\nconst { SubMenu } = Menu\r\n\r\nclass Admin extends PureComponent {\r\n    state = {\r\n        selectedKey: []\r\n        , openKeys: []\r\n        , authority: []\r\n        , admin: false\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        const ifLogin = getUser()\r\n        if( !ifLogin.username ){\r\n            message.error('不登录就想进来？给老子爬！')\r\n            this.props.history.push('/login')\r\n        }\r\n        // 设置要展开的组\r\n        this.handleFindOpenSubMenu(menu)\r\n        // 设置初始高亮的选项\r\n        this.handleGetSelectedKey(menu)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleGetAuthority()\r\n    }\r\n\r\n    handleGetSelectedKey = (arr)=>{\r\n        const url = this.props.location.pathname\r\n        if( url === '/admin' ){ // 用于应付从登录页面到登录后页面的首页项选中\r\n            this.setState({\r\n                selectedKey: ['/admin/index']\r\n            })\r\n        } else{\r\n            arr.some((item)=>{\r\n                if( item.children ){\r\n                    this.handleGetSelectedKey(item.children)\r\n                    return false\r\n                } else{\r\n                    const flag = new RegExp(item.route).test(url)\r\n                    if( item.route === url || flag ){\r\n                        this.setState({\r\n                            selectedKey: [item.route]\r\n                        })\r\n                        return true\r\n                    }\r\n                }\r\n                return false // 单纯用来消除页面控制台警告的返回值\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    handleFindOpenSubMenu = (menu)=>{\r\n        if( !menu.length ) return\r\n        const {pathname} = this.props.location\r\n        menu.some((item)=>{\r\n            if( item.children ){    // 只找有子项的\r\n                const result = item.children.some(cItem=>{\r\n                    const flag = new RegExp(cItem.route).test(pathname)\r\n                    if( cItem.route === pathname || flag ){\r\n                        this.setState({\r\n                            openKeys: [item.key]\r\n                        })\r\n                        return true\r\n                    }\r\n                    return false    // 用于消除页面控制台警告\r\n                })\r\n                return result\r\n            }\r\n            return false\r\n        })\r\n\r\n    }\r\n\r\n    handleRenderMenu = (menu)=>{\r\n        if( !menu.length ) return\r\n        return menu.map((item)=>{\r\n            if( item.children ){    // 有子项\r\n                return (\r\n                    <SubMenu\r\n                        key={item.key}\r\n                        title={\r\n                            <span>\r\n                                <Icon type={item.icon} />\r\n                                <span>{item.title}</span>\r\n                            </span>\r\n                        }\r\n                    >\r\n                        {this.handleRenderMenu(item.children)}\r\n                    </SubMenu>\r\n                )\r\n            } else { // 没有子项\r\n                const hasAuthority = this.handleJudgeAuthority(item)\r\n                return (\r\n                    <Menu.Item key={item.route} disabled={!hasAuthority}>\r\n                        <NavLink to={item.route}>\r\n                            <Icon type={item.icon} />\r\n                            <span className=\"nav-text\">{item.title}</span>\r\n                        </NavLink>\r\n                    </Menu.Item>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    handleRenderRoute = (route)=>{\r\n        if( !route.length ) return\r\n        return route.map((item, index)=>{\r\n            if( item.children ){\r\n                return this.handleRenderRoute(item.children)\r\n            } else{\r\n                return <Route path={item.route} component={item.component} key={index}/>\r\n            }\r\n        })\r\n    }\r\n\r\n    handleGetAuthority = async ()=>{\r\n        const {username} = getUser()\r\n        const result = await getUserAuthority(username)\r\n        const {data:{status, msg, authority}} = result\r\n\r\n        if( status === 0 ){\r\n            this.setState({ authority })\r\n        } else if( status === 3 ){\r\n            this.setState({ admin: true })\r\n            message.success(msg)\r\n        } else{\r\n            message.error(msg)\r\n        }\r\n    }\r\n\r\n    handleJudgeAuthority = (item)=>{\r\n        const {authority} = this.state\r\n        const {username} = getUser()\r\n        if( authority.length ){\r\n            return authority.includes(item.route)\r\n        } else if(authority.length === 0 && username === 'admin'){\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    render() {\r\n        const {selectedKey, openKeys} = this.state\r\n        return (\r\n            <Layout>\r\n                {/*侧菜单栏*/}\r\n                <Sider\r\n                    breakpoint=\"lg\"\r\n                    collapsedWidth=\"0\"\r\n                >\r\n                    <div className=\"logo\" />\r\n                    <Menu\r\n                        theme=\"dark\"\r\n                        mode=\"inline\"\r\n                        defaultSelectedKeys={selectedKey}\r\n                        defaultOpenKeys={openKeys}\r\n                    >\r\n                        {\r\n                            this.handleRenderMenu(menu)\r\n                        }\r\n                    </Menu>\r\n                </Sider>\r\n\r\n                {/*右侧内容区*/}\r\n                <Layout>\r\n                    {/*头部*/}\r\n                    <MyHeader />\r\n\r\n                    {/*内容*/}\r\n                    <Content style={{margin: '0 16px', height: 'auto', overflowY: 'scroll'}}>\r\n                        <div style={{ padding: 24, background: '#fff', minHeight: '100%' }}>\r\n                            <Switch>\r\n                                {\r\n                                    this.handleRenderRoute(menu)\r\n                                }\r\n                                <Redirect to={'/admin/index'}/>\r\n                            </Switch>\r\n                        </div>\r\n                    </Content>\r\n\r\n                    {/*底部*/}\r\n                    <Footer style={\r\n                        {\r\n                            textAlign: 'center'\r\n                            , background: 'rgb(242,241,248)'\r\n                        }\r\n                    }>欢迎来到 react + node 后台管理系统</Footer>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Admin;","import React, {Component} from 'react';\nimport {\n    BrowserRouter as Router\n    , Switch\n    , Route\n    , Redirect\n} from \"react-router-dom\";\nimport Login from \"./pages/login\";\nimport Admin from \"./pages/admin\";\n\nclass App extends Component {\n\n    render(){\n        return (\n            <Router>\n                <div className=\"App\">\n                    <Switch>\n                        <Route path={'/login'} component={Login} />\n                        <Route path={'/admin'} component={Admin} />\n                        <Redirect to={'/login'}/>\n                    </Switch>\n                </div>\n            </Router>\n        )\n    }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport ConfigStore from './storeConfig'\nimport {compose, applyMiddleware} from \"redux\";\nimport thunk from 'redux-thunk'\nimport App from './App';\n\nimport './index.css';\nconst init = compose(applyMiddleware(thunk))\nconst store = ConfigStore(init)\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}